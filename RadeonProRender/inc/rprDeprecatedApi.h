/*****************************************************************************\
*
*  Module Name    rprDeprecatedApi.h
*  Project        AMD Radeon ProRender
*
*  Description    Radeon ProRender Interface header
*
*  Copyright(C) 2017-2021 Advanced Micro Devices, Inc. All rights reserved.
*
\*****************************************************************************/

#ifndef __RADEONPRORENDER_DEPRECATED_H
#define __RADEONPRORENDER_DEPRECATED_H






//
//
//
// This file declares some API functions that are not supported by latest RPR API anymore but that can still be emulated by RPR for backward compatibility purpose. 
// Even if those funtions are emulated correctly, it's not recommended to use them in projects anymore.
//
//
//







#include <RadeonProRender.h>


#ifdef __cplusplus
extern "C" {
#endif


#define RPRX_SUPPORT_API_VERSION 0x0000002 
#define RPRX_FLAGS_ENABLE_LOGGING 0x1 
#define RPRX_MATERIAL_UBER 0x1 

typedef rpr_uint rprx_material_type;
typedef rpr_uint rprx_parameter;
typedef rpr_uint rprx_parameter_type;

struct _rprxcontext
{
    rpr_uint padding;
};
struct _rprxmaterial
{
    rpr_uint padding;
};

typedef _rprxcontext *rprx_context;
typedef _rprxmaterial *rprx_material;


#define RPR_CONTEXT_CREATEPROP_COMPILE_CALLBACK 0x601
#define RPR_CONTEXT_CREATEPROP_COMPILE_USER_DATA 0x602


// in order to unify the RPR_MATERIAL_INPUT_ prefix for all material input :
// old Uber param input : RPR_UBER_MATERIAL_INPUT_*
// new Uber param input : RPR_MATERIAL_INPUT_UBER_*
#define RPR_UBER_MATERIAL_INPUT_DIFFUSE_COLOR RPR_MATERIAL_INPUT_UBER_DIFFUSE_COLOR // 0x910,
#define RPR_UBER_MATERIAL_INPUT_DIFFUSE_WEIGHT RPR_MATERIAL_INPUT_UBER_DIFFUSE_WEIGHT // 0x927,
#define RPR_UBER_MATERIAL_INPUT_DIFFUSE_ROUGHNESS RPR_MATERIAL_INPUT_UBER_DIFFUSE_ROUGHNESS // 0x911,
#define RPR_UBER_MATERIAL_INPUT_DIFFUSE_NORMAL RPR_MATERIAL_INPUT_UBER_DIFFUSE_NORMAL // 0x912,
#define RPR_UBER_MATERIAL_INPUT_REFLECTION_COLOR RPR_MATERIAL_INPUT_UBER_REFLECTION_COLOR // 0x913,
#define RPR_UBER_MATERIAL_INPUT_REFLECTION_WEIGHT RPR_MATERIAL_INPUT_UBER_REFLECTION_WEIGHT // 0x928,
#define RPR_UBER_MATERIAL_INPUT_REFLECTION_ROUGHNESS RPR_MATERIAL_INPUT_UBER_REFLECTION_ROUGHNESS // 0x914,
#define RPR_UBER_MATERIAL_INPUT_REFLECTION_ANISOTROPY RPR_MATERIAL_INPUT_UBER_REFLECTION_ANISOTROPY // 0x915,
#define RPR_UBER_MATERIAL_INPUT_REFLECTION_ANISOTROPY_ROTATION RPR_MATERIAL_INPUT_UBER_REFLECTION_ANISOTROPY_ROTATION // 0x916,
#define RPR_UBER_MATERIAL_INPUT_REFLECTION_MODE RPR_MATERIAL_INPUT_UBER_REFLECTION_MODE // 0x917,
#define RPR_UBER_MATERIAL_INPUT_REFLECTION_IOR RPR_MATERIAL_INPUT_UBER_REFLECTION_IOR // 0x918,
#define RPR_UBER_MATERIAL_INPUT_REFLECTION_METALNESS RPR_MATERIAL_INPUT_UBER_REFLECTION_METALNESS // 0x919,
#define RPR_UBER_MATERIAL_INPUT_REFLECTION_NORMAL RPR_MATERIAL_INPUT_UBER_REFLECTION_NORMAL // 0x929,
#define RPR_UBER_MATERIAL_INPUT_REFRACTION_COLOR RPR_MATERIAL_INPUT_UBER_REFRACTION_COLOR // 0x91A,
#define RPR_UBER_MATERIAL_INPUT_REFRACTION_WEIGHT RPR_MATERIAL_INPUT_UBER_REFRACTION_WEIGHT // 0x92a,
#define RPR_UBER_MATERIAL_INPUT_REFRACTION_ROUGHNESS RPR_MATERIAL_INPUT_UBER_REFRACTION_ROUGHNESS // 0x91B,
#define RPR_UBER_MATERIAL_INPUT_REFRACTION_IOR RPR_MATERIAL_INPUT_UBER_REFRACTION_IOR // 0x91C,
#define RPR_UBER_MATERIAL_INPUT_REFRACTION_NORMAL RPR_MATERIAL_INPUT_UBER_REFRACTION_NORMAL // 0x92b,
#define RPR_UBER_MATERIAL_INPUT_REFRACTION_THIN_SURFACE RPR_MATERIAL_INPUT_UBER_REFRACTION_THIN_SURFACE // 0x91D,
#define RPR_UBER_MATERIAL_INPUT_REFRACTION_ABSORPTION_COLOR RPR_MATERIAL_INPUT_UBER_REFRACTION_ABSORPTION_COLOR// 0x92c,
#define RPR_UBER_MATERIAL_INPUT_REFRACTION_ABSORPTION_DISTANCE RPR_MATERIAL_INPUT_UBER_REFRACTION_ABSORPTION_DISTANCE // 0x92d,
#define RPR_UBER_MATERIAL_INPUT_REFRACTION_CAUSTICS RPR_MATERIAL_INPUT_UBER_REFRACTION_CAUSTICS // 0x92e,
#define RPR_UBER_MATERIAL_INPUT_COATING_COLOR RPR_MATERIAL_INPUT_UBER_COATING_COLOR // 0x91E,
#define RPR_UBER_MATERIAL_INPUT_COATING_WEIGHT RPR_MATERIAL_INPUT_UBER_COATING_WEIGHT // 0x92f,
#define RPR_UBER_MATERIAL_INPUT_COATING_ROUGHNESS RPR_MATERIAL_INPUT_UBER_COATING_ROUGHNESS // 0x91F,
#define RPR_UBER_MATERIAL_INPUT_COATING_MODE RPR_MATERIAL_INPUT_UBER_COATING_MODE // 0x920,
#define RPR_UBER_MATERIAL_INPUT_COATING_IOR RPR_MATERIAL_INPUT_UBER_COATING_IOR // 0x921,
#define RPR_UBER_MATERIAL_INPUT_COATING_METALNESS RPR_MATERIAL_INPUT_UBER_COATING_METALNESS // 0x922,
#define RPR_UBER_MATERIAL_INPUT_COATING_NORMAL RPR_MATERIAL_INPUT_UBER_COATING_NORMAL // 0x923,
#define RPR_UBER_MATERIAL_INPUT_COATING_TRANSMISSION_COLOR RPR_MATERIAL_INPUT_UBER_COATING_TRANSMISSION_COLOR // 0x930,
#define RPR_UBER_MATERIAL_INPUT_COATING_THICKNESS RPR_MATERIAL_INPUT_UBER_COATING_THICKNESS // 0x931,
#define RPR_UBER_MATERIAL_INPUT_SHEEN RPR_MATERIAL_INPUT_UBER_SHEEN // 0x932,
#define RPR_UBER_MATERIAL_INPUT_SHEEN_TINT RPR_MATERIAL_INPUT_UBER_SHEEN_TINT // 0x933,
#define RPR_UBER_MATERIAL_INPUT_SHEEN_WEIGHT RPR_MATERIAL_INPUT_UBER_SHEEN_WEIGHT // 0x934,
#define RPR_UBER_MATERIAL_INPUT_EMISSION_COLOR RPR_MATERIAL_INPUT_UBER_EMISSION_COLOR // 0x924,
#define RPR_UBER_MATERIAL_INPUT_EMISSION_WEIGHT RPR_MATERIAL_INPUT_UBER_EMISSION_WEIGHT // 0x925,
#define RPR_UBER_MATERIAL_INPUT_EMISSION_MODE RPR_MATERIAL_INPUT_UBER_EMISSION_MODE // 0x935,
#define RPR_UBER_MATERIAL_INPUT_TRANSPARENCY RPR_MATERIAL_INPUT_UBER_TRANSPARENCY // 0x926,
#define RPR_UBER_MATERIAL_INPUT_SSS_SCATTER_COLOR RPR_MATERIAL_INPUT_UBER_SSS_SCATTER_COLOR // 0x937,
#define RPR_UBER_MATERIAL_INPUT_SSS_SCATTER_DISTANCE RPR_MATERIAL_INPUT_UBER_SSS_SCATTER_DISTANCE // 0x938,
#define RPR_UBER_MATERIAL_INPUT_SSS_SCATTER_DIRECTION RPR_MATERIAL_INPUT_UBER_SSS_SCATTER_DIRECTION // 0x939,
#define RPR_UBER_MATERIAL_INPUT_SSS_WEIGHT RPR_MATERIAL_INPUT_UBER_SSS_WEIGHT // 0x93a,
#define RPR_UBER_MATERIAL_INPUT_SSS_MULTISCATTER RPR_MATERIAL_INPUT_UBER_SSS_MULTISCATTER // 0x93b,
#define RPR_UBER_MATERIAL_INPUT_BACKSCATTER_WEIGHT RPR_MATERIAL_INPUT_UBER_BACKSCATTER_WEIGHT // 0x93c,
#define RPR_UBER_MATERIAL_INPUT_BACKSCATTER_COLOR RPR_MATERIAL_INPUT_UBER_BACKSCATTER_COLOR // 0x93d,
#define RPR_UBER_MATERIAL_INPUT_FRESNEL_SCHLICK_APPROXIMATION RPR_MATERIAL_INPUT_UBER_FRESNEL_SCHLICK_APPROXIMATION // 0x2C,



//rprx_parameter
#define RPRX_UBER_MATERIAL_DIFFUSE_COLOR			RPR_UBER_MATERIAL_INPUT_DIFFUSE_COLOR 
#define RPRX_UBER_MATERIAL_DIFFUSE_WEIGHT			RPR_UBER_MATERIAL_INPUT_DIFFUSE_WEIGHT 
#define RPRX_UBER_MATERIAL_DIFFUSE_ROUGHNESS			RPR_UBER_MATERIAL_INPUT_DIFFUSE_ROUGHNESS 
#define RPRX_UBER_MATERIAL_DIFFUSE_NORMAL			RPR_UBER_MATERIAL_INPUT_DIFFUSE_NORMAL 
#define RPRX_UBER_MATERIAL_REFLECTION_COLOR			RPR_UBER_MATERIAL_INPUT_REFLECTION_COLOR 
#define RPRX_UBER_MATERIAL_REFLECTION_WEIGHT			RPR_UBER_MATERIAL_INPUT_REFLECTION_WEIGHT 
#define RPRX_UBER_MATERIAL_REFLECTION_ROUGHNESS			RPR_UBER_MATERIAL_INPUT_REFLECTION_ROUGHNESS 
#define RPRX_UBER_MATERIAL_REFLECTION_ANISOTROPY		RPR_UBER_MATERIAL_INPUT_REFLECTION_ANISOTROPY 
#define RPRX_UBER_MATERIAL_REFLECTION_ANISOTROPY_ROTATION		RPR_UBER_MATERIAL_INPUT_REFLECTION_ANISOTROPY_ROTATION 
#define RPRX_UBER_MATERIAL_REFLECTION_MODE		RPR_UBER_MATERIAL_INPUT_REFLECTION_MODE 
#define RPRX_UBER_MATERIAL_REFLECTION_IOR		RPR_UBER_MATERIAL_INPUT_REFLECTION_IOR 
#define RPRX_UBER_MATERIAL_REFLECTION_METALNESS			RPR_UBER_MATERIAL_INPUT_REFLECTION_METALNESS 
#define RPRX_UBER_MATERIAL_REFLECTION_NORMAL		RPR_UBER_MATERIAL_INPUT_REFLECTION_NORMAL 
#define RPRX_UBER_MATERIAL_REFRACTION_COLOR			RPR_UBER_MATERIAL_INPUT_REFRACTION_COLOR 
#define RPRX_UBER_MATERIAL_REFRACTION_WEIGHT		RPR_UBER_MATERIAL_INPUT_REFRACTION_WEIGHT 
#define RPRX_UBER_MATERIAL_REFRACTION_ROUGHNESS			RPR_UBER_MATERIAL_INPUT_REFRACTION_ROUGHNESS 
#define RPRX_UBER_MATERIAL_REFRACTION_IOR		RPR_UBER_MATERIAL_INPUT_REFRACTION_IOR 
#define RPRX_UBER_MATERIAL_REFRACTION_NORMAL		RPR_UBER_MATERIAL_INPUT_REFRACTION_NORMAL 
#define RPRX_UBER_MATERIAL_REFRACTION_THIN_SURFACE		RPR_UBER_MATERIAL_INPUT_REFRACTION_THIN_SURFACE 
#define RPRX_UBER_MATERIAL_REFRACTION_ABSORPTION_COLOR		RPR_UBER_MATERIAL_INPUT_REFRACTION_ABSORPTION_COLOR 
#define RPRX_UBER_MATERIAL_REFRACTION_ABSORPTION_DISTANCE		RPR_UBER_MATERIAL_INPUT_REFRACTION_ABSORPTION_DISTANCE 
#define RPRX_UBER_MATERIAL_REFRACTION_CAUSTICS		RPR_UBER_MATERIAL_INPUT_REFRACTION_CAUSTICS 
#define RPRX_UBER_MATERIAL_COATING_COLOR		RPR_UBER_MATERIAL_INPUT_COATING_COLOR 
#define RPRX_UBER_MATERIAL_COATING_WEIGHT		RPR_UBER_MATERIAL_INPUT_COATING_WEIGHT 
#define RPRX_UBER_MATERIAL_COATING_ROUGHNESS		RPR_UBER_MATERIAL_INPUT_COATING_ROUGHNESS 
#define RPRX_UBER_MATERIAL_COATING_MODE			RPR_UBER_MATERIAL_INPUT_COATING_MODE 
#define RPRX_UBER_MATERIAL_COATING_IOR		RPR_UBER_MATERIAL_INPUT_COATING_IOR 
#define RPRX_UBER_MATERIAL_COATING_METALNESS		RPR_UBER_MATERIAL_INPUT_COATING_METALNESS 
#define RPRX_UBER_MATERIAL_COATING_NORMAL		RPR_UBER_MATERIAL_INPUT_COATING_NORMAL 
#define RPRX_UBER_MATERIAL_COATING_TRANSMISSION_COLOR		RPR_UBER_MATERIAL_INPUT_COATING_TRANSMISSION_COLOR 
#define RPRX_UBER_MATERIAL_COATING_THICKNESS		RPR_UBER_MATERIAL_INPUT_COATING_THICKNESS 
#define RPRX_UBER_MATERIAL_SHEEN		RPR_UBER_MATERIAL_INPUT_SHEEN 
#define RPRX_UBER_MATERIAL_SHEEN_TINT		RPR_UBER_MATERIAL_INPUT_SHEEN_TINT 
#define RPRX_UBER_MATERIAL_SHEEN_WEIGHT			RPR_UBER_MATERIAL_INPUT_SHEEN_WEIGHT 
#define RPRX_UBER_MATERIAL_EMISSION_COLOR		RPR_UBER_MATERIAL_INPUT_EMISSION_COLOR 
#define RPRX_UBER_MATERIAL_EMISSION_WEIGHT		RPR_UBER_MATERIAL_INPUT_EMISSION_WEIGHT 
#define RPRX_UBER_MATERIAL_EMISSION_MODE		RPR_UBER_MATERIAL_INPUT_EMISSION_MODE 
#define RPRX_UBER_MATERIAL_TRANSPARENCY			RPR_UBER_MATERIAL_INPUT_TRANSPARENCY 
//#define RPRX_UBER_MATERIAL_DISPLACEMENT			RPR_UBER_MATERIAL_INPUT_DISPLACEMENT   // removed.  replaced by rprShapeSetDisplacementMaterial
#define RPRX_UBER_MATERIAL_SSS_SCATTER_COLOR		RPR_UBER_MATERIAL_INPUT_SSS_SCATTER_COLOR 
#define RPRX_UBER_MATERIAL_SSS_SCATTER_DISTANCE			RPR_UBER_MATERIAL_INPUT_SSS_SCATTER_DISTANCE 
#define RPRX_UBER_MATERIAL_SSS_SCATTER_DIRECTION		RPR_UBER_MATERIAL_INPUT_SSS_SCATTER_DIRECTION 
#define RPRX_UBER_MATERIAL_SSS_WEIGHT		RPR_UBER_MATERIAL_INPUT_SSS_WEIGHT 
#define RPRX_UBER_MATERIAL_SSS_MULTISCATTER			RPR_UBER_MATERIAL_INPUT_SSS_MULTISCATTER 
#define RPRX_UBER_MATERIAL_BACKSCATTER_WEIGHT		RPR_UBER_MATERIAL_INPUT_BACKSCATTER_WEIGHT 
#define RPRX_UBER_MATERIAL_BACKSCATTER_COLOR		RPR_UBER_MATERIAL_INPUT_BACKSCATTER_COLOR 
#define RPRX_UBER_MATERIAL_FRESNEL_SCHLICK_APPROXIMATION		RPR_UBER_MATERIAL_INPUT_FRESNEL_SCHLICK_APPROXIMATION

#define RPRX_UBER_MATERIAL_BLEND_COLOR0 0x12EU 
#define RPRX_UBER_MATERIAL_BLEND_COLOR1 0x12FU 
#define RPRX_UBER_MATERIAL_BLEND_WEIGHT 0x130U 
#define RPRX_UBER_MATERIAL_TWOSIDED_FRONTFACE 0x131U 
#define RPRX_UBER_MATERIAL_TWOSIDED_BACKFACE 0x132U 

#define RPRX_UBER_MATERIAL_REFLECTION_MODE_PBR 0x1U 
#define RPRX_UBER_MATERIAL_REFLECTION_MODE_METALNESS 0x2U 
#define RPRX_UBER_MATERIAL_COATING_MODE_PBR 0x1U 
#define RPRX_UBER_MATERIAL_COATING_MODE_METALNESS 0x2U 
#define RPRX_UBER_MATERIAL_EMISSION_MODE_SINGLESIDED RPR_UBER_MATERIAL_EMISSION_MODE_SINGLESIDED 
#define RPRX_UBER_MATERIAL_EMISSION_MODE_DOUBLESIDED RPR_UBER_MATERIAL_EMISSION_MODE_DOUBLESIDED 

#define RPRX_PARAMETER_TYPE_FLOAT4 0x1U 
#define RPRX_PARAMETER_TYPE_UINT 0x2U 
#define RPRX_PARAMETER_TYPE_NODE 0x3U 

// RPR_DIRECTIONAL_LIGHT_SHADOW_SOFTNESS has been replaced by RPR_DIRECTIONAL_LIGHT_SHADOW_SOFTNESS_ANGLE.
// RPR_DIRECTIONAL_LIGHT_SHADOW_SOFTNESS is a coefficient.
// RPR_DIRECTIONAL_LIGHT_SHADOW_SOFTNESS_ANGLE is an angle in radian
// <RPR_DIRECTIONAL_LIGHT_SHADOW_SOFTNESS_ANGLE> = <RPR_DIRECTIONAL_LIGHT_SHADOW_SOFTNESS> * pi/4
#define RPR_DIRECTIONAL_LIGHT_SHADOW_SOFTNESS 0x809  

//
// RPRX / rprSupport doesn't exist anymore
// Uber material is now a classic material inside Core RPR API : RPR_MATERIAL_NODE_UBERV2
// using those rprx* functions below is exactly the same thing that using RPR_MATERIAL_NODE_UBERV2
//
extern RPR_API_ENTRY rpr_status rprxCreateContext(rpr_material_system material_system, rpr_uint flags, rprx_context* out_context);
extern RPR_API_ENTRY rpr_status rprxCreateMaterial(rprx_context context, rprx_material_type type, rprx_material* out_material);
extern RPR_API_ENTRY rpr_status rprxMaterialDelete(rprx_context context, rprx_material material);
extern RPR_API_ENTRY rpr_status rprxMaterialSetParameterN(rprx_context context, rprx_material material, rprx_parameter parameter, rpr_material_node node);
extern RPR_API_ENTRY rpr_status rprxMaterialSetParameterUber(rprx_context context, rprx_material material, rprx_parameter parameter, rprx_material nodeX);
extern RPR_API_ENTRY rpr_status rprxMaterialSetParameterU(rprx_context context, rprx_material material, rprx_parameter parameter, rpr_uint value);
extern RPR_API_ENTRY rpr_status rprxMaterialSetParameterF(rprx_context context, rprx_material material, rprx_parameter parameter, rpr_float x, rpr_float y, rpr_float z, rpr_float w);
extern RPR_API_ENTRY rpr_status rprxMaterialGetParameterType(rprx_context context, rprx_material material, rprx_parameter parameter, rpr_parameter_type * out_type);
extern RPR_API_ENTRY rpr_status rprxMaterialGetParameterValue(rprx_context context, rprx_material material, rprx_parameter parameter, void * out_value);
extern RPR_API_ENTRY rpr_status rprxMaterialCommit(rprx_context context, rprx_material material);
extern RPR_API_ENTRY rpr_status rprxShapeAttachMaterial(rprx_context context, rpr_shape shape, rprx_material material);
extern RPR_API_ENTRY rpr_status rprxCurveAttachMaterial(rprx_context context, rpr_curve curve, rprx_material material);
extern RPR_API_ENTRY rpr_status rprxShapeDetachMaterial(rprx_context context, rpr_shape shape, rprx_material material);
extern RPR_API_ENTRY rpr_status rprxCurveDetachMaterial(rprx_context context, rpr_curve curve, rprx_material material);
extern RPR_API_ENTRY rpr_status rprxMaterialAttachMaterial(rprx_context context, rpr_material_node node, rpr_char const * parameter, rprx_material material);
extern RPR_API_ENTRY rpr_status rprxMaterialDetachMaterial(rprx_context context, rpr_material_node node, rpr_char const * parameter, rprx_material material);
extern RPR_API_ENTRY rpr_status rprxDeleteContext(rprx_context context);
extern RPR_API_ENTRY rpr_status rprxMaterialSetName(rprx_context context, rprx_material material, rpr_char const * name);
extern RPR_API_ENTRY rpr_status rprxMaterialGetName(rprx_context context, rprx_material material, size_t size, void * data, size_t * size_ret);


//
// Those functions have not been implemented in the backward compatibility :
//
//rpr_int rprxMaterialGetSurfaceNode(rprx_context context, rprx_material material, rpr_material_node* node);
//rpr_int rprxMaterialGetVolumeNode(rprx_context context, rprx_material material, rpr_material_node* node);
//rpr_int rprxMaterialGetDisplacementNode(rprx_context context, rprx_material material, rpr_material_node* node);
//rpr_int rprxIsMaterialRprx(rprx_context context, rpr_material_node node, rprx_material * out_material, rpr_bool* out_result);  
//rpr_int rprxGetLog(rprx_context context, rpr_char* log, size_t* size);
//rpr_int rprxShapeGetMaterial(rprx_context context, rpr_shape shape, rprx_material* material);
//rpr_int rprxCurveGetMaterial(rprx_context context, rpr_curve curve, rprx_material* material);


//
// materials should no longer use string parameters. only key parameters ( use rprMaterialNodeSetInput*ByKey )
//
extern RPR_API_ENTRY rpr_status rprMaterialNodeSetInputF(rpr_material_node in_node, const char* param, float x, float y, float z, float w); 
extern RPR_API_ENTRY rpr_status rprMaterialNodeSetInputN(rpr_material_node in_node, rpr_char const * in_input, rpr_material_node in_input_node);
extern RPR_API_ENTRY rpr_status rprMaterialNodeSetInputU(rpr_material_node in_node, rpr_char const * in_input, rpr_uint in_value);
extern RPR_API_ENTRY rpr_status rprMaterialNodeSetInputImageData(rpr_material_node in_node, rpr_char const * in_input, rpr_image image);
extern RPR_API_ENTRY rpr_status rprMaterialNodeSetInputBufferData(rpr_material_node in_node, rpr_char const * in_input, rpr_buffer buffer);



//
// context should no longer use string parameters. only key parameters ( use rprContextSetParameterByKey* )
//
extern RPR_API_ENTRY rpr_status rprContextSetParameter1u(rpr_context context, rpr_char const * name, rpr_uint x);
extern RPR_API_ENTRY rpr_status rprContextSetParameter1f(rpr_context context, rpr_char const * name, rpr_float x);
extern RPR_API_ENTRY rpr_status rprContextSetParameter3f(rpr_context context, rpr_char const * name, rpr_float x, rpr_float y, rpr_float z);
extern RPR_API_ENTRY rpr_status rprContextSetParameter4f(rpr_context context, rpr_char const * name, rpr_float x, rpr_float y, rpr_float z, rpr_float w);
extern RPR_API_ENTRY rpr_status rprContextSetParameterString(rpr_context context, rpr_char const * name, rpr_char const * value);


// Set softness of shadow produced by the light
// 'coeff' : value between [0;1]. 0.0 is sharp
// DEPRECATED : replaced by rprDirectionalLightSetShadowSoftnessAngle
extern RPR_API_ENTRY rpr_status rprDirectionalLightSetShadowSoftness(rpr_light light, rpr_float coeff);

// name was changed for clarification
#define RPR_AOV_MATERIAL_IDX RPR_AOV_MATERIAL_ID




// DEPRECATED - will be removed in the future - please use rprShapeSetMotionTransformCount and rprShapeSetMotionTransform instead.
// RPR_SHAPE_LINEAR_MOTION , RPR_SHAPE_ANGULAR_MOTION , RPR_SHAPE_SCALE_MOTION are also deprecated
extern RPR_API_ENTRY rpr_status rprShapeSetLinearMotion(rpr_shape shape, rpr_float x, rpr_float y, rpr_float z);
extern RPR_API_ENTRY rpr_status rprShapeSetAngularMotion(rpr_shape shape, rpr_float x, rpr_float y, rpr_float z, rpr_float w);
extern RPR_API_ENTRY rpr_status rprShapeSetScaleMotion(rpr_shape shape, rpr_float x, rpr_float y, rpr_float z);
 
// DEPRECATED - will be removed in the future - please use rprCameraSetMotionTransform and rprCameraSetMotionTransformCount instead.
// RPR_CAMERA_LINEAR_MOTION , RPR_CAMERA_ANGULAR_MOTION  are also deprecated
extern RPR_API_ENTRY rpr_status rprCameraSetLinearMotion(rpr_camera camera, rpr_float x, rpr_float y, rpr_float z);
extern RPR_API_ENTRY rpr_status rprCameraSetAngularMotion(rpr_camera camera, rpr_float x, rpr_float y, rpr_float z, rpr_float w);




///////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Old API FR functions
//
//
#define FR_VERSION_MAJOR RPR_VERSION_MAJOR 
#define FR_VERSION_MINOR RPR_VERSION_MINOR 
#define FR_VERSION_REVISION RPR_VERSION_REVISION 
#define FR_VERSION_BUILD RPR_VERSION_BUILD 
#define FR_VERSION_MAJOR_MINOR_REVISION RPR_VERSION_MAJOR_MINOR_REVISION 
#define FR_API_VERSION FR_VERSION_MAJOR_MINOR_REVISION 
#define FR_API_VERSION_MINOR FR_VERSION_BUILD 
#define FR_SUCCESS 0 
#define FR_ERROR_COMPUTE_API_NOT_SUPPORTED -1 
#define FR_ERROR_OUT_OF_SYSTEM_MEMORY -2 
#define FR_ERROR_OUT_OF_VIDEO_MEMORY -3 
#define FR_ERROR_INVALID_LIGHTPATH_EXPR -5 
#define FR_ERROR_INVALID_IMAGE -6 
#define FR_ERROR_INVALID_AA_METHOD -7 
#define FR_ERROR_UNSUPPORTED_IMAGE_FORMAT -8 
#define FR_ERROR_INVALID_GL_TEXTURE -9 
#define FR_ERROR_INVALID_CL_IMAGE -10 
#define FR_ERROR_INVALID_OBJECT -11 
#define FR_ERROR_INVALID_PARAMETER -12 
#define FR_ERROR_INVALID_TAG -13 
#define FR_ERROR_INVALID_LIGHT -14 
#define FR_ERROR_INVALID_CONTEXT -15 
#define FR_ERROR_UNIMPLEMENTED -16 
#define FR_ERROR_INVALID_API_VERSION -17 
#define FR_ERROR_INTERNAL_ERROR -18 
#define FR_ERROR_IO_ERROR -19 
#define FR_ERROR_UNSUPPORTED_SHADER_PARAMETER_TYPE -20 
#define FR_ERROR_MATERIAL_STACK_OVERFLOW -21 
#define FR_ERROR_INVALID_PARAMETER_TYPE -22 
#define FR_ERROR_UNSUPPORTED -23 
#define FR_ERROR_OPENCL_OUT_OF_HOST_MEMORY -24 
#define FR_ERROR_OPENGL -25 
#define FR_ERROR_OPENCL -26 
#define FR_ERROR_NULLPTR -27 
#define FR_ERROR_NODETYPE -28 
#define FR_ERROR_ABORTED -29 
#define FR_PARAMETER_TYPE_FLOAT 0x1 
#define FR_PARAMETER_TYPE_FLOAT2 0x2 
#define FR_PARAMETER_TYPE_FLOAT3 0x3 
#define FR_PARAMETER_TYPE_FLOAT4 0x4 
#define FR_PARAMETER_TYPE_IMAGE 0x5 
#define FR_PARAMETER_TYPE_STRING 0x6 
#define FR_PARAMETER_TYPE_SHADER 0x7 
#define FR_PARAMETER_TYPE_UINT 0x8 
#define FR_PARAMETER_TYPE_ULONG 0x9 
#define FR_PARAMETER_TYPE_LONGLONG 0xa 
#define FR_CREATION_FLAGS_ENABLE_GPU0 (1 << 0) 
#define FR_CREATION_FLAGS_ENABLE_GPU1 (1 << 1) 
#define FR_CREATION_FLAGS_ENABLE_GPU2 (1 << 2) 
#define FR_CREATION_FLAGS_ENABLE_GPU3 (1 << 3) 
#define FR_CREATION_FLAGS_ENABLE_CPU (1 << 4) 
#define FR_CREATION_FLAGS_ENABLE_GL_INTEROP (1 << 5) 
#define FR_CREATION_FLAGS_ENABLE_GPU4 (1 << 6) 
#define FR_CREATION_FLAGS_ENABLE_GPU5 (1 << 7) 
#define FR_CREATION_FLAGS_ENABLE_GPU6 (1 << 8) 
#define FR_CREATION_FLAGS_ENABLE_GPU7 (1 << 9) 
#define FR_CREATION_FLAGS_ENABLE_METAL (1 << 10) 
#define FR_CREATION_FLAGS_ENABLE_GPU8 (1 << 11) 
#define FR_CREATION_FLAGS_ENABLE_GPU9 (1 << 12) 
#define FR_CREATION_FLAGS_ENABLE_GPU10 (1 << 13) 
#define FR_CREATION_FLAGS_ENABLE_GPU11 (1 << 14) 
#define FR_CREATION_FLAGS_ENABLE_GPU12 (1 << 15) 
#define FR_CREATION_FLAGS_ENABLE_GPU13 (1 << 16) 
#define FR_CREATION_FLAGS_ENABLE_GPU14 (1 << 17) 
#define FR_CREATION_FLAGS_ENABLE_GPU15 (1 << 18) 
#define FR_CREATION_FLAGS_ENABLE_DEBUG (1 << 31) 
#define FR_FILTER_NONE 0x0 
#define FR_FILTER_BOX 0x1 
#define FR_FILTER_TRIANGLE 0x2 
#define FR_FILTER_GAUSSIAN 0x3 
#define FR_FILTER_MITCHELL 0x4 
#define FR_FILTER_LANCZOS 0x5 
#define FR_FILTER_BLACKMANHARRIS 0x6 
#define FR_CONTEXT_SAMPLER_TYPE_SOBOL 0x1 
#define FR_CONTEXT_SAMPLER_TYPE_RANDOM 0x2 
#define FR_CONTEXT_SAMPLER_TYPE_CMJ 0x3 
#define FR_SHAPE_TYPE_MESH 0x1 
#define FR_SHAPE_TYPE_INSTANCE 0x2 
#define FR_LIGHT_TYPE_POINT 0x1 
#define FR_LIGHT_TYPE_DIRECTIONAL 0x2 
#define FR_LIGHT_TYPE_SPOT 0x3 
#define FR_LIGHT_TYPE_ENVIRONMENT 0x4 
#define FR_LIGHT_TYPE_SKY 0x5 
#define FR_LIGHT_TYPE_IES 0x6 
#define FR_OBJECT_NAME 0x777777 
#define FR_OBJECT_UNIQUE_ID 0x777778 
#define FR_CONTEXT_CREATEPROP_COMPILE_CALLBACK 0x601 
#define FR_CONTEXT_CREATEPROP_COMPILE_USER_DATA 0x602 
#define FR_CONTEXT_CREATION_FLAGS 0x102 
#define FR_CONTEXT_CACHE_PATH 0x103 
#define FR_CONTEXT_RENDER_STATUS 0x104 
#define FR_CONTEXT_RENDER_STATISTICS 0x105 
#define FR_CONTEXT_DEVICE_COUNT 0x106 
#define FR_CONTEXT_PARAMETER_COUNT 0x107 
#define FR_CONTEXT_ACTIVE_PLUGIN 0x108 
#define FR_CONTEXT_SCENE 0x109 
#define FR_CONTEXT_ITERATIONS 0x10B 
#define FR_CONTEXT_IMAGE_FILTER_TYPE 0x10C 
#define FR_CONTEXT_IMAGE_FILTER_BOX_RADIUS 0x10D 
#define FR_CONTEXT_IMAGE_FILTER_GAUSSIAN_RADIUS 0x10E 
#define FR_CONTEXT_IMAGE_FILTER_TRIANGLE_RADIUS 0x10F 
#define FR_CONTEXT_IMAGE_FILTER_MITCHELL_RADIUS 0x110 
#define FR_CONTEXT_IMAGE_FILTER_LANCZOS_RADIUS 0x111 
#define FR_CONTEXT_IMAGE_FILTER_BLACKMANHARRIS_RADIUS 0x112 
#define FR_CONTEXT_TONE_MAPPING_TYPE 0x113 
#define FR_CONTEXT_TONE_MAPPING_LINEAR_SCALE 0x114 
#define FR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_SENSITIVITY 0x115 
#define FR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_EXPOSURE 0x116 
#define FR_CONTEXT_TONE_MAPPING_PHOTO_LINEAR_FSTOP 0x117 
#define FR_CONTEXT_TONE_MAPPING_REINHARD02_PRE_SCALE 0x118 
#define FR_CONTEXT_TONE_MAPPING_REINHARD02_POST_SCALE 0x119 
#define FR_CONTEXT_TONE_MAPPING_REINHARD02_BURN 0x11A 
#define FR_CONTEXT_MAX_RECURSION 0x11B 
#define FR_CONTEXT_RAY_CAST_EPSILON 0x11C 
#define FR_CONTEXT_RADIANCE_CLAMP 0x11D 
#define FR_CONTEXT_X_FLIP 0x11E 
#define FR_CONTEXT_Y_FLIP 0x11F 
#define FR_CONTEXT_TEXTURE_GAMMA 0x120 
#define FR_CONTEXT_PDF_THRESHOLD 0x121 
#define FR_CONTEXT_RENDER_MODE 0x122 
#define FR_CONTEXT_ROUGHNESS_CAP 0x123 
#define FR_CONTEXT_DISPLAY_GAMMA 0x124 
#define FR_CONTEXT_MATERIAL_STACK_SIZE 0x125 
#define FR_CONTEXT_CLIPPING_PLANE 0x126 
#define FR_CONTEXT_GPU0_NAME 0x127 
#define FR_CONTEXT_GPU1_NAME 0x128 
#define FR_CONTEXT_GPU2_NAME 0x129 
#define FR_CONTEXT_GPU3_NAME 0x12A 
#define FR_CONTEXT_CPU_NAME 0x12B 
#define FR_CONTEXT_GPU4_NAME 0x12C 
#define FR_CONTEXT_GPU5_NAME 0x12D 
#define FR_CONTEXT_GPU6_NAME 0x12E 
#define FR_CONTEXT_GPU7_NAME 0x12F 
#define FR_CONTEXT_TONE_MAPPING_EXPONENTIAL_INTENSITY 0x130 
#define FR_CONTEXT_FRAMECOUNT 0x131 
#define FR_CONTEXT_TEXTURE_COMPRESSION 0x132 
#define FR_CONTEXT_AO_RAY_LENGTH 0x133 
#define FR_CONTEXT_OOC_TEXTURE_CACHE 0x134 
#define FR_CONTEXT_PREVIEW 0x135 
#define FR_CONTEXT_CPU_THREAD_LIMIT 0x136 
#define FR_CONTEXT_LAST_ERROR_MESSAGE 0x137 
#define FR_CONTEXT_MAX_DEPTH_DIFFUSE 0x138 
#define FR_CONTEXT_MAX_DEPTH_GLOSSY 0x139 
#define FR_CONTEXT_OOC_CACHE_PATH 0x13a 
#define FR_CONTEXT_MAX_DEPTH_REFRACTION 0x13B 
#define FR_CONTEXT_MAX_DEPTH_GLOSSY_REFRACTION 0x13C 
#define FR_CONTEXT_RENDER_LAYER_MASK 0x13D 
#define FR_CONTEXT_SINGLE_LEVEL_BVH_ENABLED 0x13E 
#define FR_CONTEXT_TRANSPARENT_BACKGROUND 0x13F 
#define FR_CONTEXT_MAX_DEPTH_SHADOW 0x140 
#define FR_CONTEXT_API_VERSION 0x141 
#define FR_CONTEXT_GPU8_NAME 0x142 
#define FR_CONTEXT_GPU9_NAME 0x143 
#define FR_CONTEXT_GPU10_NAME 0x144 
#define FR_CONTEXT_GPU11_NAME 0x145 
#define FR_CONTEXT_GPU12_NAME 0x146 
#define FR_CONTEXT_GPU13_NAME 0x147 
#define FR_CONTEXT_GPU14_NAME 0x148 
#define FR_CONTEXT_GPU15_NAME 0x149 
#define FR_CONTEXT_API_VERSION_MINOR 0x14A 
#define FR_CONTEXT_METAL_PERFORMANCE_SHADER 0x14B 
#define FR_CONTEXT_USER_TEXTURE_0 0x14C 
#define FR_CONTEXT_USER_TEXTURE_1 0x14D 
#define FR_CONTEXT_USER_TEXTURE_2 0x14E 
#define FR_CONTEXT_USER_TEXTURE_3 0x14F 
#define FR_CONTEXT_MIPMAP_LOD_OFFSET 0x150 
#define FR_CONTEXT_AO_RAY_COUNT 0x151 
#define FR_CONTEXT_SAMPLER_TYPE 0x152 
#define FR_CONTEXT_ADAPTIVE_SAMPLING_TILE_SIZE 0x153 
#define FR_CONTEXT_ADAPTIVE_SAMPLING_MIN_SPP 0x154 
#define FR_CONTEXT_ADAPTIVE_SAMPLING_THRESHOLD 0x155 
#define FR_CONTEXT_TILE_SIZE 0x156 
#define FR_CONTEXT_LIST_CREATED_CAMERAS 0x157 
#define FR_CONTEXT_LIST_CREATED_MATERIALNODES 0x158 
#define FR_CONTEXT_LIST_CREATED_LIGHTS 0x159 
#define FR_CONTEXT_LIST_CREATED_SHAPES 0x15A 
#define FR_CONTEXT_LIST_CREATED_POSTEFFECTS 0x15B 
#define FR_CONTEXT_LIST_CREATED_HETEROVOLUMES 0x15C 
#define FR_CONTEXT_LIST_CREATED_GRIDS 0x15D 
#define FR_CONTEXT_LIST_CREATED_BUFFERS 0x15E 
#define FR_CONTEXT_LIST_CREATED_IMAGES 0x15F 
#define FR_CONTEXT_LIST_CREATED_FRAMEBUFFERS 0x160 
#define FR_CONTEXT_LIST_CREATED_SCENES 0x161 
#define FR_CONTEXT_LIST_CREATED_CURVES 0x162 
#define FR_CONTEXT_LIST_CREATED_MATERIALSYSTEM 0x163 
#define FR_CONTEXT_LIST_CREATED_COMPOSITE 0x164 
#define FR_CONTEXT_LIST_CREATED_LUT 0x165 
#define FR_CONTEXT_AA_ENABLED 0x166 
#define FR_CONTEXT_ACTIVE_PIXEL_COUNT 0x167 
#define FR_CONTEXT_TRACING_ENABLED 0x168 
#define FR_CONTEXT_TRACING_PATH 0x169 
#define FR_CONTEXT_TILE_RECT 0x16A 
#define FR_CONTEXT_MAX 0x16B 
#define FR_CAMERA_TRANSFORM 0x201 
#define FR_CAMERA_FSTOP 0x202 
#define FR_CAMERA_APERTURE_BLADES 0x203 
#define FR_CAMERA_RESPONSE 0x204 
#define FR_CAMERA_EXPOSURE 0x205 
#define FR_CAMERA_FOCAL_LENGTH 0x206 
#define FR_CAMERA_SENSOR_SIZE 0x207 
#define FR_CAMERA_MODE 0x208 
#define FR_CAMERA_ORTHO_WIDTH 0x209 
#define FR_CAMERA_ORTHO_HEIGHT 0x20A 
#define FR_CAMERA_FOCUS_DISTANCE 0x20B 
#define FR_CAMERA_POSITION 0x20C 
#define FR_CAMERA_LOOKAT 0x20D 
#define FR_CAMERA_UP 0x20E 
#define FR_CAMERA_FOCAL_TILT 0x20F 
#define FR_CAMERA_LENS_SHIFT 0x210 
#define FR_CAMERA_IPD 0x211 
#define FR_CAMERA_TILT_CORRECTION 0x212 
#define FR_CAMERA_NEAR_PLANE 0x213 
#define FR_CAMERA_FAR_PLANE 0x214 
#define FR_CAMERA_LINEAR_MOTION 0x215 
#define FR_CAMERA_ANGULAR_MOTION 0x216 
#define FR_IMAGE_FORMAT 0x301 
#define FR_IMAGE_DESC 0x302 
#define FR_IMAGE_DATA 0x303 
#define FR_IMAGE_DATA_SIZEBYTE 0x304 
#define FR_IMAGE_WRAP 0x305 
#define FR_IMAGE_FILTER 0x306 
#define FR_IMAGE_GAMMA 0x307 
#define FR_IMAGE_MIPMAP_ENABLED 0x308 
#define FR_IMAGE_MIP_COUNT 0x309 
#define FR_IMAGE_GAMMA_FROM_FILE 0x30A 
#define FR_BUFFER_DESC 0x350 
#define FR_BUFFER_DATA 0x351 
#define FR_SHAPE_TYPE 0x401 
#define FR_SHAPE_VIDMEM_USAGE 0x402 
#define FR_SHAPE_TRANSFORM 0x403 
#define FR_SHAPE_MATERIAL 0x404 
#define FR_SHAPE_LINEAR_MOTION 0x405 
#define FR_SHAPE_ANGULAR_MOTION 0x406 
#define FR_SHAPE_SHADOW_FLAG 0x408
#define FR_SHAPE_SUBDIVISION_FACTOR 0x409 
#define FR_SHAPE_DISPLACEMENT_SCALE 0x40A 
#define FR_SHAPE_SHADOW_CATCHER_FLAG 0x40E 
#define FR_SHAPE_VOLUME_MATERIAL 0x40F 
#define FR_SHAPE_OBJECT_GROUP_ID 0x410 
#define FR_SHAPE_SUBDIVISION_CREASEWEIGHT 0x411 
#define FR_SHAPE_SUBDIVISION_BOUNDARYINTEROP 0x412 
#define FR_SHAPE_DISPLACEMENT_MATERIAL 0x413 
#define FR_SHAPE_MATERIALS_PER_FACE 0x415 
#define FR_SHAPE_SCALE_MOTION 0x416 
#define FR_SHAPE_HETERO_VOLUME 0x417 
#define FR_SHAPE_LAYER_MASK 0x418 
#define FR_SHAPE_VISIBILITY_PRIMARY_ONLY_FLAG 0x40C 
#define FR_SHAPE_VISIBILITY_SHADOW 0x41A 
#define FR_SHAPE_VISIBILITY_REFLECTION 0x41B 
#define FR_SHAPE_VISIBILITY_REFRACTION 0x41C 
#define FR_SHAPE_VISIBILITY_TRANSPARENT 0x41D 
#define FR_SHAPE_VISIBILITY_DIFFUSE 0x41E 
#define FR_SHAPE_VISIBILITY_GLOSSY_REFLECTION 0x41F 
#define FR_SHAPE_VISIBILITY_GLOSSY_REFRACTION 0x420 
#define FR_SHAPE_VISIBILITY_LIGHT 0x421 
#define FR_SHAPE_LIGHT_GROUP_ID 0x422 
#define FR_SHAPE_STATIC 0x423
#define FR_SHAPE_PER_VERTEX_VALUE0 0x424
#define FR_SHAPE_PER_VERTEX_VALUE1 0x425
#define FR_SHAPE_PER_VERTEX_VALUE2 0x426
#define FR_SHAPE_PER_VERTEX_VALUE3 0x427
#define FR_SHAPE_REFLECTION_CATCHER_FLAG 0x428 
#define FR_MESH_POLYGON_COUNT 0x501 
#define FR_MESH_VERTEX_COUNT 0x502 
#define FR_MESH_NORMAL_COUNT 0x503 
#define FR_MESH_UV_COUNT 0x504 
#define FR_MESH_VERTEX_ARRAY 0x505 
#define FR_MESH_NORMAL_ARRAY 0x506 
#define FR_MESH_UV_ARRAY 0x507 
#define FR_MESH_VERTEX_INDEX_ARRAY 0x508 
#define FR_MESH_NORMAL_INDEX_ARRAY 0x509 
#define FR_MESH_UV_INDEX_ARRAY 0x50A 
#define FR_MESH_VERTEX_STRIDE 0x50C 
#define FR_MESH_NORMAL_STRIDE 0x50D 
#define FR_MESH_UV_STRIDE 0x50E 
#define FR_MESH_VERTEX_INDEX_STRIDE 0x50F 
#define FR_MESH_NORMAL_INDEX_STRIDE 0x510 
#define FR_MESH_UV_INDEX_STRIDE 0x511 
#define FR_MESH_NUM_FACE_VERTICES_ARRAY 0x512 
#define FR_MESH_UV2_COUNT 0x513 
#define FR_MESH_UV2_ARRAY 0x514 
#define FR_MESH_UV2_INDEX_ARRAY 0x515 
#define FR_MESH_UV2_STRIDE 0x516 
#define FR_MESH_UV2_INDEX_STRIDE 0x517 
#define FR_MESH_UV_DIM 0x518 
#define FR_SCENE_SHAPE_COUNT 0x701 
#define FR_SCENE_LIGHT_COUNT 0x702 
#define FR_SCENE_SHAPE_LIST 0x704 
#define FR_SCENE_LIGHT_LIST 0x705 
#define FR_SCENE_CAMERA 0x706 
#define FR_SCENE_CAMERA_RIGHT 0x707 
#define FR_SCENE_BACKGROUND_IMAGE 0x708 
#define FR_SCENE_ENVIRONMENT_OVERRIDE_REFLECTION 0x709 
#define FR_SCENE_ENVIRONMENT_OVERRIDE_REFRACTION 0x70A 
#define FR_SCENE_ENVIRONMENT_OVERRIDE_TRANSPARENCY 0x70B 
#define FR_SCENE_ENVIRONMENT_OVERRIDE_BACKGROUND 0x70C 
#define FR_SCENE_AABB 0x70D 
#define FR_SCENE_HETEROVOLUME_LIST 0x70E 
#define FR_SCENE_HETEROVOLUME_COUNT 0x70F 
#define FR_SCENE_CURVE_LIST 0x710 
#define FR_SCENE_CURVE_COUNT 0x711 
#define FR_SCENE_ENVIRONMENT_LIGHT 0x712 
#define FR_LUT_FILENAME 0x850 
#define FR_LUT_DATA 0x851 
#define FR_LIGHT_TYPE 0x801 
#define FR_LIGHT_TRANSFORM 0x803 
#define FR_LIGHT_GROUP_ID 0x805 
#define FR_POINT_LIGHT_RADIANT_POWER 0x804 
#define FR_DIRECTIONAL_LIGHT_RADIANT_POWER 0x808 
#define FR_DIRECTIONAL_LIGHT_SHADOW_SOFTNESS 0x809 
#define FR_SPOT_LIGHT_RADIANT_POWER 0x80B 
#define FR_SPOT_LIGHT_CONE_SHAPE 0x80C 
#define FR_ENVIRONMENT_LIGHT_IMAGE 0x80F 
#define FR_ENVIRONMENT_LIGHT_INTENSITY_SCALE 0x810 
#define FR_ENVIRONMENT_LIGHT_PORTAL_LIST 0x818 
#define FR_ENVIRONMENT_LIGHT_PORTAL_COUNT 0x819 
#define FR_SKY_LIGHT_TURBIDITY 0x812 
#define FR_SKY_LIGHT_ALBEDO 0x813 
#define FR_SKY_LIGHT_SCALE 0x814 
#define FR_SKY_LIGHT_DIRECTION 0x815 
#define FR_SKY_LIGHT_PORTAL_LIST 0x820 
#define FR_SKY_LIGHT_PORTAL_COUNT 0x821 
#define FR_IES_LIGHT_RADIANT_POWER 0x816 
#define FR_IES_LIGHT_IMAGE_DESC 0x817 
#define FR_PARAMETER_NAME 0x1201 
#define FR_PARAMETER_TYPE 0x1203 
#define FR_PARAMETER_DESCRIPTION 0x1204 
#define FR_PARAMETER_VALUE 0x1205 
#define FR_FRAMEBUFFER_FORMAT 0x1301 
#define FR_FRAMEBUFFER_DESC 0x1302 
#define FR_FRAMEBUFFER_DATA 0x1303 
#define FR_FRAMEBUFFER_GL_TARGET 0x1304 
#define FR_FRAMEBUFFER_GL_MIPLEVEL 0x1305 
#define FR_FRAMEBUFFER_GL_TEXTURE 0x1306 
#define FR_MESH_POLYGON_VERTEX_COUNT 0x1401 
#define FR_MESH_POLYGON_VERTEX_POSITION 0x1501 
#define FR_MESH_POLYGON_VERTEX_NORMAL 0x1502 
#define FR_MESH_POLYGON_VERTEX_TEXCOORD 0x1503 
#define FR_INSTANCE_PARENT_SHAPE 0x1601 
#define FR_COMPONENT_TYPE_UINT8 0x1 
#define FR_COMPONENT_TYPE_FLOAT16 0x2
#define FR_COMPONENT_TYPE_FLOAT32 0x3
#define FR_COMPONENT_TYPE_UNKNOWN 0x4
#define FR_BUFFER_ELEMENT_TYPE_INT32 0x1 
#define FR_BUFFER_ELEMENT_TYPE_FLOAT32 0x2 
#define FR_RENDER_MODE_GLOBAL_ILLUMINATION 0x1 
#define FR_RENDER_MODE_DIRECT_ILLUMINATION 0x2 
#define FR_RENDER_MODE_DIRECT_ILLUMINATION_NO_SHADOW 0x3 
#define FR_RENDER_MODE_WIREFRAME 0x4 
#define FR_RENDER_MODE_MATERIAL_INDEX 0x5 
#define FR_RENDER_MODE_POSITION 0x6 
#define FR_RENDER_MODE_NORMAL 0x7 
#define FR_RENDER_MODE_TEXCOORD 0x8 
#define FR_RENDER_MODE_AMBIENT_OCCLUSION 0x9 
#define FR_RENDER_MODE_DIFFUSE 0x0a 
#define FR_CAMERA_MODE_PERSPECTIVE 0x1 
#define FR_CAMERA_MODE_ORTHOGRAPHIC 0x2 
#define FR_CAMERA_MODE_LATITUDE_LONGITUDE_360 0x3 
#define FR_CAMERA_MODE_LATITUDE_LONGITUDE_STEREO 0x4 
#define FR_CAMERA_MODE_CUBEMAP 0x5 
#define FR_CAMERA_MODE_CUBEMAP_STEREO 0x6 
#define FR_CAMERA_MODE_FISHEYE 0x7 
#define FR_TONEMAPPING_OPERATOR_NONE 0x0 
#define FR_TONEMAPPING_OPERATOR_LINEAR 0x1 
#define FR_TONEMAPPING_OPERATOR_PHOTOLINEAR 0x2 
#define FR_TONEMAPPING_OPERATOR_AUTOLINEAR 0x3 
#define FR_TONEMAPPING_OPERATOR_MAXWHITE 0x4 
#define FR_TONEMAPPING_OPERATOR_REINHARD02 0x5 
#define FR_TONEMAPPING_OPERATOR_EXPONENTIAL 0x6 
#define FR_VOLUME_TYPE_NONE 0xFFFF 
#define FR_VOLUME_TYPE_HOMOGENEOUS 0x0 
#define FR_VOLUME_TYPE_HETEROGENEOUS 0x1 
#define FR_MATERIAL_SYSTEM_NODE_LIST 0x1100
#define FR_MATERIAL_NODE_TYPE 0x1101 
#define FR_MATERIAL_NODE_SYSTEM 0x1102 
#define FR_MATERIAL_NODE_INPUT_COUNT 0x1103 
#define FR_MATERIAL_NODE_INPUT_NAME 0x1103 
#define FR_MATERIAL_NODE_INPUT_DESCRIPTION 0x1105 
#define FR_MATERIAL_NODE_INPUT_VALUE 0x1106 
#define FR_MATERIAL_NODE_INPUT_TYPE 0x1107 
#define FR_MATERIAL_NODE_DIFFUSE 0x1 
#define FR_MATERIAL_NODE_MICROFACET 0x2 
#define FR_MATERIAL_NODE_REFLECTION 0x3 
#define FR_MATERIAL_NODE_REFRACTION 0x4 
#define FR_MATERIAL_NODE_MICROFACET_REFRACTION 0x5 
#define FR_MATERIAL_NODE_TRANSPARENT 0x6 
#define FR_MATERIAL_NODE_EMISSIVE 0x7 
#define FR_MATERIAL_NODE_WARD 0x8 
#define FR_MATERIAL_NODE_ADD 0x9 
#define FR_MATERIAL_NODE_BLEND 0xA 
#define FR_MATERIAL_NODE_ARITHMETIC 0xB 
#define FR_MATERIAL_NODE_FRESNEL 0xC 
#define FR_MATERIAL_NODE_NORMAL_MAP 0xD 
#define FR_MATERIAL_NODE_IMAGE_TEXTURE 0xE 
#define FR_MATERIAL_NODE_NOISE2D_TEXTURE 0xF 
#define FR_MATERIAL_NODE_DOT_TEXTURE 0x10 
#define FR_MATERIAL_NODE_GRADIENT_TEXTURE 0x11 
#define FR_MATERIAL_NODE_CHECKER_TEXTURE 0x12 
#define FR_MATERIAL_NODE_CONSTANT_TEXTURE 0x13 
#define FR_MATERIAL_NODE_INPUT_LOOKUP 0x14 
#define FR_MATERIAL_NODE_BLEND_VALUE 0x16 
#define FR_MATERIAL_NODE_PASSTHROUGH 0x17 
#define FR_MATERIAL_NODE_ORENNAYAR 0x18 
#define FR_MATERIAL_NODE_FRESNEL_SCHLICK 0x19 
#define FR_MATERIAL_NODE_DIFFUSE_REFRACTION 0x1B 
#define FR_MATERIAL_NODE_BUMP_MAP 0x1C 
#define FR_MATERIAL_NODE_VOLUME 0x1D 
#define FR_MATERIAL_NODE_MICROFACET_ANISOTROPIC_REFLECTION 0x1E 
#define FR_MATERIAL_NODE_MICROFACET_ANISOTROPIC_REFRACTION 0x1F 
#define FR_MATERIAL_NODE_TWOSIDED 0x20 
#define FR_MATERIAL_NODE_UV_PROCEDURAL 0x21 
#define FR_MATERIAL_NODE_MICROFACET_BECKMANN 0x22 
#define FR_MATERIAL_NODE_PHONG 0x23 
#define FR_MATERIAL_NODE_BUFFER_SAMPLER 0x24 
#define FR_MATERIAL_NODE_UV_TRIPLANAR 0x25 
#define FR_MATERIAL_NODE_AO_MAP 0x26 
#define FR_MATERIAL_NODE_USER_TEXTURE_0 0x27 
#define FR_MATERIAL_NODE_USER_TEXTURE_1 0x28 
#define FR_MATERIAL_NODE_USER_TEXTURE_2 0x29 
#define FR_MATERIAL_NODE_USER_TEXTURE_3 0x2a 
#define FR_MATERIAL_NODE_UBERV2 0x2b
#define FR_MATERIAL_NODE_TRANSFORM 0x2c
#define FR_MATERIAL_INPUT_COLOR 0x0 
#define FR_MATERIAL_INPUT_COLOR0 0x1 
#define FR_MATERIAL_INPUT_COLOR1 0x2 
#define FR_MATERIAL_INPUT_NORMAL 0x3 
#define FR_MATERIAL_INPUT_UV 0x4 
#define FR_MATERIAL_INPUT_DATA 0x5 
#define FR_MATERIAL_INPUT_ROUGHNESS 0x6 
#define FR_MATERIAL_INPUT_IOR 0x7 
#define FR_MATERIAL_INPUT_ROUGHNESS_X 0x8 
#define FR_MATERIAL_INPUT_ROUGHNESS_Y 0x9 
#define FR_MATERIAL_INPUT_ROTATION 0xA 
#define FR_MATERIAL_INPUT_WEIGHT 0xB 
#define FR_MATERIAL_INPUT_OP 0xC 
#define FR_MATERIAL_INPUT_INVEC 0xD 
#define FR_MATERIAL_INPUT_UV_SCALE 0xE 
#define FR_MATERIAL_INPUT_VALUE 0xF 
#define FR_MATERIAL_INPUT_REFLECTANCE 0x10 
#define FR_MATERIAL_INPUT_SCALE 0x11 
#define FR_MATERIAL_INPUT_SCATTERING 0x12 
#define FR_MATERIAL_INPUT_ABSORBTION 0x13 
#define FR_MATERIAL_INPUT_EMISSION 0x14 
#define FR_MATERIAL_INPUT_G 0x15 
#define FR_MATERIAL_INPUT_MULTISCATTER 0x16 
#define FR_MATERIAL_INPUT_COLOR2 0x17 
#define FR_MATERIAL_INPUT_COLOR3 0x18 
#define FR_MATERIAL_INPUT_ANISOTROPIC 0x19 
#define FR_MATERIAL_INPUT_FRONTFACE 0x1a 
#define FR_MATERIAL_INPUT_BACKFACE 0x1b 
#define FR_MATERIAL_INPUT_ORIGIN 0x1c 
#define FR_MATERIAL_INPUT_ZAXIS 0x1d 
#define FR_MATERIAL_INPUT_XAXIS 0x1e 
#define FR_MATERIAL_INPUT_THRESHOLD 0x1f 
#define FR_MATERIAL_INPUT_OFFSET 0x20 
#define FR_MATERIAL_INPUT_UV_TYPE 0x21 
#define FR_MATERIAL_INPUT_RADIUS 0x22 
#define FR_MATERIAL_INPUT_SIDE 0x23 
#define FR_MATERIAL_INPUT_CAUSTICS 0x24 
#define FR_MATERIAL_INPUT_TRANSMISSION_COLOR 0x25 
#define FR_MATERIAL_INPUT_THICKNESS 0x26 
#define FR_MATERIAL_INPUT_0 0x27 
#define FR_MATERIAL_INPUT_1 0x28 
#define FR_MATERIAL_INPUT_2 0x29 
#define FR_MATERIAL_INPUT_3 0x2a 
#define FR_MATERIAL_INPUT_4 0x2b 
#define FR_MATERIAL_INPUT_SCHLICK_APPROXIMATION 0x2c 
#define FR_MATERIAL_INPUT_APPLYSURFACE 0x2d 
#define FR_MATERIAL_INPUT_RASTER_METALLIC 0x901 
#define FR_MATERIAL_INPUT_RASTER_ROUGHNESS 0x902 
#define FR_MATERIAL_INPUT_RASTER_SUBSURFACE 0x903 
#define FR_MATERIAL_INPUT_RASTER_ANISOTROPIC 0x904 
#define FR_MATERIAL_INPUT_RASTER_SPECULAR 0x905 
#define FR_MATERIAL_INPUT_RASTER_SPECULARTINT 0x906 
#define FR_MATERIAL_INPUT_RASTER_SHEEN 0x907 
#define FR_MATERIAL_INPUT_RASTER_SHEENTINT 0x908 
#define FR_MATERIAL_INPUT_RASTER_CLEARCOAT 0x90A 
#define FR_MATERIAL_INPUT_RASTER_CLEARCOATGLOSS 0x90B 
#define FR_MATERIAL_INPUT_RASTER_COLOR 0x90C 
#define FR_MATERIAL_INPUT_RASTER_NORMAL 0x90D 
#define FR_UBER_MATERIAL_INPUT_DIFFUSE_COLOR 0x910
#define FR_UBER_MATERIAL_INPUT_DIFFUSE_WEIGHT 0x927
#define FR_UBER_MATERIAL_INPUT_DIFFUSE_ROUGHNESS 0x911
#define FR_UBER_MATERIAL_INPUT_DIFFUSE_NORMAL 0x912
#define FR_UBER_MATERIAL_INPUT_REFLECTION_COLOR 0x913
#define FR_UBER_MATERIAL_INPUT_REFLECTION_WEIGHT 0x928
#define FR_UBER_MATERIAL_INPUT_REFLECTION_ROUGHNESS 0x914
#define FR_UBER_MATERIAL_INPUT_REFLECTION_ANISOTROPY 0x915
#define FR_UBER_MATERIAL_INPUT_REFLECTION_ANISOTROPY_ROTATION 0x916
#define FR_UBER_MATERIAL_INPUT_REFLECTION_MODE 0x917
#define FR_UBER_MATERIAL_INPUT_REFLECTION_IOR 0x918
#define FR_UBER_MATERIAL_INPUT_REFLECTION_METALNESS 0x919
#define FR_UBER_MATERIAL_INPUT_REFLECTION_NORMAL 0x929
#define FR_UBER_MATERIAL_INPUT_REFRACTION_COLOR 0x91A
#define FR_UBER_MATERIAL_INPUT_REFRACTION_WEIGHT 0x92a
#define FR_UBER_MATERIAL_INPUT_REFRACTION_ROUGHNESS 0x91B
#define FR_UBER_MATERIAL_INPUT_REFRACTION_IOR 0x91C
#define FR_UBER_MATERIAL_INPUT_REFRACTION_NORMAL 0x92b
#define FR_UBER_MATERIAL_INPUT_REFRACTION_THIN_SURFACE 0x91D
#define FR_UBER_MATERIAL_INPUT_REFRACTION_ABSORPTION_COLOR 0x92c
#define FR_UBER_MATERIAL_INPUT_REFRACTION_ABSORPTION_DISTANCE 0x92d
#define FR_UBER_MATERIAL_INPUT_REFRACTION_CAUSTICS 0x92e
#define FR_UBER_MATERIAL_INPUT_COATING_COLOR 0x91E
#define FR_UBER_MATERIAL_INPUT_COATING_WEIGHT 0x92f
#define FR_UBER_MATERIAL_INPUT_COATING_ROUGHNESS 0x91F
#define FR_UBER_MATERIAL_INPUT_COATING_MODE 0x920
#define FR_UBER_MATERIAL_INPUT_COATING_IOR 0x921
#define FR_UBER_MATERIAL_INPUT_COATING_METALNESS 0x922
#define FR_UBER_MATERIAL_INPUT_COATING_NORMAL 0x923
#define FR_UBER_MATERIAL_INPUT_COATING_TRANSMISSION_COLOR 0x930
#define FR_UBER_MATERIAL_INPUT_COATING_THICKNESS 0x931
#define FR_UBER_MATERIAL_INPUT_SHEEN 0x932
#define FR_UBER_MATERIAL_INPUT_SHEEN_TINT 0x933
#define FR_UBER_MATERIAL_INPUT_SHEEN_WEIGHT 0x934
#define FR_UBER_MATERIAL_INPUT_EMISSION_COLOR 0x924
#define FR_UBER_MATERIAL_INPUT_EMISSION_WEIGHT 0x925
#define FR_UBER_MATERIAL_INPUT_EMISSION_MODE 0x935
#define FR_UBER_MATERIAL_INPUT_TRANSPARENCY 0x926
#define FR_UBER_MATERIAL_INPUT_SSS_SCATTER_COLOR 0x937
#define FR_UBER_MATERIAL_INPUT_SSS_SCATTER_DISTANCE 0x938
#define FR_UBER_MATERIAL_INPUT_SSS_SCATTER_DIRECTION 0x939
#define FR_UBER_MATERIAL_INPUT_SSS_WEIGHT 0x93a
#define FR_UBER_MATERIAL_INPUT_SSS_MULTISCATTER 0x93b
#define FR_UBER_MATERIAL_INPUT_BACKSCATTER_WEIGHT 0x93c
#define FR_UBER_MATERIAL_INPUT_BACKSCATTER_COLOR 0x93d
#define FR_UBER_MATERIAL_INPUT_FRESNEL_SCHLICK_APPROXIMATION RPR_UBER_MATERIAL_INPUT_FRESNEL_SCHLICK_APPROXIMATION
#define FR_UBER_MATERIAL_IOR_MODE_PBR 0x1U
#define FR_UBER_MATERIAL_IOR_MODE_METALNESS 0x2U
#define FR_UBER_MATERIAL_EMISSION_MODE_SINGLESIDED 0x1U
#define FR_UBER_MATERIAL_EMISSION_MODE_DOUBLESIDED 0x2U
#define FR_MATERIAL_NODE_OP_ADD 0x00 
#define FR_MATERIAL_NODE_OP_SUB 0x01 
#define FR_MATERIAL_NODE_OP_MUL 0x02 
#define FR_MATERIAL_NODE_OP_DIV 0x03 
#define FR_MATERIAL_NODE_OP_SIN 0x04 
#define FR_MATERIAL_NODE_OP_COS 0x05 
#define FR_MATERIAL_NODE_OP_TAN 0x06 
#define FR_MATERIAL_NODE_OP_SELECT_X 0x07 
#define FR_MATERIAL_NODE_OP_SELECT_Y 0x08 
#define FR_MATERIAL_NODE_OP_SELECT_Z 0x09 
#define FR_MATERIAL_NODE_OP_COMBINE 0x0A 
#define FR_MATERIAL_NODE_OP_DOT3 0x0B 
#define FR_MATERIAL_NODE_OP_CROSS3 0x0C 
#define FR_MATERIAL_NODE_OP_LENGTH3 0x0D 
#define FR_MATERIAL_NODE_OP_NORMALIZE3 0x0E 
#define FR_MATERIAL_NODE_OP_POW 0x0F 
#define FR_MATERIAL_NODE_OP_ACOS 0x10 
#define FR_MATERIAL_NODE_OP_ASIN 0x11 
#define FR_MATERIAL_NODE_OP_ATAN 0x12 
#define FR_MATERIAL_NODE_OP_AVERAGE_XYZ 0x13 
#define FR_MATERIAL_NODE_OP_AVERAGE 0x14 
#define FR_MATERIAL_NODE_OP_MIN 0x15 
#define FR_MATERIAL_NODE_OP_MAX 0x16 
#define FR_MATERIAL_NODE_OP_FLOOR 0x17 
#define FR_MATERIAL_NODE_OP_MOD 0x18 
#define FR_MATERIAL_NODE_OP_ABS 0x19 
#define FR_MATERIAL_NODE_OP_SHUFFLE_YZWX 0x1a 
#define FR_MATERIAL_NODE_OP_SHUFFLE_ZWXY 0x1b 
#define FR_MATERIAL_NODE_OP_SHUFFLE_WXYZ 0x1c 
#define FR_MATERIAL_NODE_OP_MAT_MUL 0x1d 
#define FR_MATERIAL_NODE_OP_SELECT_W 0x1e 
#define FR_MATERIAL_NODE_OP_DOT4 0x1f 
#define FR_MATERIAL_NODE_OP_LOG 0x20 
#define FR_MATERIAL_NODE_OP_LOWER_OR_EQUAL 0x21 
#define FR_MATERIAL_NODE_OP_LOWER 0x22 
#define FR_MATERIAL_NODE_OP_GREATER_OR_EQUAL 0x23 
#define FR_MATERIAL_NODE_OP_GREATER 0x24 
#define FR_MATERIAL_NODE_OP_EQUAL 0x25 
#define FR_MATERIAL_NODE_OP_NOT_EQUAL 0x26 
#define FR_MATERIAL_NODE_OP_AND 0x27 
#define FR_MATERIAL_NODE_OP_OR 0x28 
#define FR_MATERIAL_NODE_OP_TERNARY 0x29 
#define FR_MATERIAL_NODE_LOOKUP_UV 0x0 
#define FR_MATERIAL_NODE_LOOKUP_N 0x1 
#define FR_MATERIAL_NODE_LOOKUP_P 0x2 
#define FR_MATERIAL_NODE_LOOKUP_INVEC 0x3 
#define FR_MATERIAL_NODE_LOOKUP_OUTVEC 0x4 
#define FR_MATERIAL_NODE_LOOKUP_UV1 0x5 
#define FR_MATERIAL_NODE_LOOKUP_P_LOCAL 0x6 
#define FR_MATERIAL_NODE_LOOKUP_VERTEX_VALUE0 0x7 
#define FR_MATERIAL_NODE_LOOKUP_VERTEX_VALUE1 0x8 
#define FR_MATERIAL_NODE_LOOKUP_VERTEX_VALUE2 0x9 
#define FR_MATERIAL_NODE_LOOKUP_VERTEX_VALUE3 0xa 
#define FR_MATERIAL_NODE_LOOKUP_SHAPE_RANDOM_COLOR 0xb 
#define FR_MATERIAL_NODE_UVTYPE_PLANAR 0x0 
#define FR_MATERIAL_NODE_UVTYPE_CYLINDICAL 0x1 
#define FR_MATERIAL_NODE_UVTYPE_SPHERICAL 0x2 
#define FR_MATERIAL_NODE_UVTYPE_PROJECT 0x3 
#define FR_MATERIAL_NODE_TRANSFORM_ROTATE_LOCAL_TO_WORLD 0x1 
#define FR_POST_EFFECT_TYPE 0x0 
#define FR_POST_EFFECT_WHITE_BALANCE_COLOR_SPACE 0x4 
#define FR_POST_EFFECT_WHITE_BALANCE_COLOR_TEMPERATURE 0x5 
#define FR_POST_EFFECT_SIMPLE_TONEMAP_EXPOSURE 0x6 
#define FR_POST_EFFECT_SIMPLE_TONEMAP_CONTRAST 0x7 
#define FR_POST_EFFECT_SIMPLE_TONEMAP_ENABLE_TONEMAP 0x8 
#define FR_POST_EFFECT_BLOOM_RADIUS 0x9 
#define FR_POST_EFFECT_BLOOM_THRESHOLD 0x0a 
#define FR_POST_EFFECT_BLOOM_WEIGHT 0x0b 
#define FR_AOV_COLOR 0x0 
#define FR_AOV_OPACITY 0x1 
#define FR_AOV_WORLD_COORDINATE 0x2 
#define FR_AOV_UV 0x3 
#define FR_AOV_MATERIAL_IDX 0x4 
#define FR_AOV_GEOMETRIC_NORMAL 0x5 
#define FR_AOV_SHADING_NORMAL 0x6 
#define FR_AOV_DEPTH 0x7 
#define FR_AOV_OBJECT_ID 0x8 
#define FR_AOV_OBJECT_GROUP_ID 0x9 
#define FR_AOV_SHADOW_CATCHER 0x0a 
#define FR_AOV_BACKGROUND 0x0b 
#define FR_AOV_EMISSION 0x0c 
#define FR_AOV_VELOCITY 0x0d 
#define FR_AOV_DIRECT_ILLUMINATION 0x0e 
#define FR_AOV_INDIRECT_ILLUMINATION 0x0f 
#define FR_AOV_AO 0x10 
#define FR_AOV_DIRECT_DIFFUSE 0x11 
#define FR_AOV_DIRECT_REFLECT 0x12 
#define FR_AOV_INDIRECT_DIFFUSE 0x13 
#define FR_AOV_INDIRECT_REFLECT 0x14 
#define FR_AOV_REFRACT 0x15 
#define FR_AOV_VOLUME 0x16 
#define FR_AOV_LIGHT_GROUP0 0x17 
#define FR_AOV_LIGHT_GROUP1 0x18 
#define FR_AOV_LIGHT_GROUP2 0x19 
#define FR_AOV_LIGHT_GROUP3 0x1a 
#define FR_AOV_DIFFUSE_ALBEDO 0x1b 
#define FR_AOV_VARIANCE 0x1c 
#define FR_AOV_VIEW_SHADING_NORMAL 0x1d
#define FR_AOV_REFLECTION_CATCHER 0x1e
#define FR_AOV_COLOR_RIGHT 0x1f 
#define FR_AOV_MAX 0x20
#define FR_POST_EFFECT_TONE_MAP 0x0 
#define FR_POST_EFFECT_WHITE_BALANCE 0x1 
#define FR_POST_EFFECT_SIMPLE_TONEMAP 0x2 
#define FR_POST_EFFECT_NORMALIZATION 0x3 
#define FR_POST_EFFECT_GAMMA_CORRECTION 0x4 
#define FR_POST_EFFECT_BLOOM 0x5 
#define FR_COLOR_SPACE_SRGB 0x1 
#define FR_COLOR_SPACE_ADOBE_RGB 0x2 
#define FR_COLOR_SPACE_REC2020 0x3 
#define FR_COLOR_SPACE_DCIP3 0x4 
#define FR_MATERIAL_NODE_INPUT_TYPE_FLOAT4 0x1 
#define FR_MATERIAL_NODE_INPUT_TYPE_UINT 0x2 
#define FR_MATERIAL_NODE_INPUT_TYPE_NODE 0x3 
#define FR_MATERIAL_NODE_INPUT_TYPE_IMAGE 0x4 
#define FR_MATERIAL_NODE_INPUT_TYPE_BUFFER 0x5 
#define FR_SUBDIV_BOUNDARY_INTERFOP_TYPE_EDGE_AND_CORNER 0x1 
#define FR_SUBDIV_BOUNDARY_INTERFOP_TYPE_EDGE_ONLY 0x2 
#define FR_IMAGE_WRAP_TYPE_REPEAT 0x1 
#define FR_IMAGE_WRAP_TYPE_MIRRORED_REPEAT 0x2 
#define FR_IMAGE_WRAP_TYPE_CLAMP_TO_EDGE 0x3 
#define FR_IMAGE_WRAP_TYPE_CLAMP_ZERO 0x5 
#define FR_IMAGE_WRAP_TYPE_CLAMP_ONE 0x6 
#define FR_IMAGE_FILTER_TYPE_NEAREST 0x1 
#define FR_IMAGE_FILTER_TYPE_LINEAR 0x2 
#define FR_COMPOSITE_TYPE 0x1  
#define FR_COMPOSITE_FRAMEBUFFER_INPUT_FB 0x2  
#define FR_COMPOSITE_NORMALIZE_INPUT_COLOR 0x3  
#define FR_COMPOSITE_NORMALIZE_INPUT_AOVTYPE 0x4  
#define FR_COMPOSITE_CONSTANT_INPUT_VALUE 0x5  
#define FR_COMPOSITE_LERP_VALUE_INPUT_COLOR0 0x6  
#define FR_COMPOSITE_LERP_VALUE_INPUT_COLOR1 0x7  
#define FR_COMPOSITE_LERP_VALUE_INPUT_WEIGHT 0x8  
#define FR_COMPOSITE_ARITHMETIC_INPUT_COLOR0 0x9  
#define FR_COMPOSITE_ARITHMETIC_INPUT_COLOR1 0x0a  
#define FR_COMPOSITE_ARITHMETIC_INPUT_OP 0x0b  
#define FR_COMPOSITE_GAMMA_CORRECTION_INPUT_COLOR 0x0c  
#define FR_COMPOSITE_LUT_INPUT_LUT 0x0d  
#define FR_COMPOSITE_LUT_INPUT_COLOR 0x0e  
#define FR_COMPOSITE_ARITHMETIC 0x1  
#define FR_COMPOSITE_LERP_VALUE 0x2  
#define FR_COMPOSITE_INVERSE 0x3  
#define FR_COMPOSITE_NORMALIZE 0x4  
#define FR_COMPOSITE_GAMMA_CORRECTION 0x5  
#define FR_COMPOSITE_EXPOSURE 0x6  
#define FR_COMPOSITE_CONTRAST 0x7  
#define FR_COMPOSITE_SIDE_BY_SIDE 0x8  
#define FR_COMPOSITE_TONEMAP_ACES 0x9  
#define FR_COMPOSITE_TONEMAP_REINHARD 0xa  
#define FR_COMPOSITE_TONEMAP_LINEAR 0xb  
#define FR_COMPOSITE_FRAMEBUFFER 0xc  
#define FR_COMPOSITE_CONSTANT 0xd  
#define FR_COMPOSITE_LUT 0xe  
#define FR_GRID_SIZE_X 0x930 
#define FR_GRID_SIZE_Y 0x931 
#define FR_GRID_SIZE_Z 0x932 
#define FR_GRID_DATA 0x933 
#define FR_GRID_DATA_SIZEBYTE 0x934 
#define FR_GRID_INDICES 0x936 
#define FR_GRID_INDICES_NUMBER 0x937 
#define FR_GRID_INDICES_TOPOLOGY 0x938 
#define FR_HETEROVOLUME_TRANSFORM 0x735 
#define FR_HETEROVOLUME_ALBEDO_V2 0x73c 
#define FR_HETEROVOLUME_DENSITY_V2 0x73d 
#define FR_HETEROVOLUME_EMISSION_V2 0x73e 
#define FR_HETEROVOLUME_ALBEDO_LOOKUP_VALUES 0x73f 
#define FR_HETEROVOLUME_ALBEDO_LOOKUP_VALUES_COUNT 0x740 
#define FR_HETEROVOLUME_DENSITY_LOOKUP_VALUES 0x741 
#define FR_HETEROVOLUME_DENSITY_LOOKUP_VALUES_COUNT 0x742 
#define FR_HETEROVOLUME_EMISSION_LOOKUP_VALUES 0x743 
#define FR_HETEROVOLUME_EMISSION_LOOKUP_VALUES_COUNT 0x744 
#define FR_HETEROVOLUME_ALBEDO_SCALE 0x745 
#define FR_HETEROVOLUME_DENSITY_SCALE 0x746 
#define FR_HETEROVOLUME_EMISSION_SCALE 0x747 
#define FR_GRID_INDICES_TOPOLOGY_I_U64 0x950 
#define FR_GRID_INDICES_TOPOLOGY_XYZ_U32 0x951 
#define FR_GRID_INDICES_TOPOLOGY_I_S64 0x952 
#define FR_GRID_INDICES_TOPOLOGY_XYZ_S32 0x953 
#define FR_CURVE_CONTROLPOINTS_COUNT 0x830 
#define FR_CURVE_CONTROLPOINTS_DATA 0x831 
#define FR_CURVE_CONTROLPOINTS_STRIDE 0x832 
#define FR_CURVE_INDICES_COUNT 0x833 
#define FR_CURVE_INDICES_DATA 0x834 
#define FR_CURVE_RADIUS 0x835 
#define FR_CURVE_UV 0x836 
#define FR_CURVE_COUNT_CURVE 0x837 
#define FR_CURVE_SEGMENTS_PER_CURVE 0x838 
#define FR_FALSE 0u
#define FR_TRUE 1u
typedef rpr_char fr_char;
typedef rpr_uchar fr_uchar;
typedef rpr_int fr_int;
typedef rpr_uint fr_uint;
typedef rpr_long fr_long;
typedef rpr_ulong fr_ulong;
typedef rpr_short fr_short;
typedef rpr_ushort fr_ushort;
typedef rpr_float fr_float;
typedef rpr_double fr_double;
typedef rpr_longlong fr_longlong;
typedef rpr_bool fr_bool;
typedef rpr_bitfield fr_bitfield;
typedef rpr_status fr_status;
typedef rpr_context fr_context;
typedef rpr_camera fr_camera;
typedef rpr_shape fr_shape;
typedef rpr_light fr_light;
typedef rpr_scene fr_scene;
typedef rpr_image fr_image;
typedef rpr_buffer fr_buffer;
typedef rpr_hetero_volume fr_hetero_volume;
typedef rpr_grid fr_grid;
typedef rpr_curve fr_curve;
typedef rpr_framebuffer fr_framebuffer;
typedef rpr_material_system fr_material_system;
typedef rpr_material_node fr_material_node;
typedef rpr_post_effect fr_post_effect;
typedef rpr_context_properties fr_context_properties;
typedef rpr_composite fr_composite;
typedef rpr_lut fr_lut;
typedef rpr_light_type fr_light_type;
typedef rpr_image_option fr_image_option;
typedef rpr_shape_type fr_shape_type;
typedef rpr_context_type fr_context_type;
typedef rpr_creation_flags fr_creation_flags;
typedef rpr_aa_filter fr_aa_filter;
typedef rpr_context_sampler_type fr_context_sampler_type;
typedef rpr_context_info fr_context_info;
typedef rpr_camera_info fr_camera_info;
typedef rpr_image_info fr_image_info;
typedef rpr_buffer_info fr_buffer_info;
typedef rpr_shape_info fr_shape_info;
typedef rpr_mesh_info fr_mesh_info;
typedef rpr_light_info fr_light_info;
typedef rpr_lut_info fr_lut_info;
typedef rpr_scene_info fr_scene_info;
typedef rpr_parameter_info fr_parameter_info;
typedef rpr_framebuffer_info fr_framebuffer_info;
typedef rpr_channel_order fr_channel_order;
typedef rpr_channel_type fr_channel_type;
typedef rpr_parameter_type fr_parameter_type;
typedef rpr_render_mode fr_render_mode;
typedef rpr_component_type fr_component_type;
typedef rpr_buffer_element_type fr_buffer_element_type;
typedef rpr_camera_mode fr_camera_mode;
typedef rpr_tonemapping_operator fr_tonemapping_operator;
typedef rpr_volume_type fr_volume_type;
typedef rpr_material_system_info fr_material_system_info;
typedef rpr_material_system_type fr_material_system_type;
typedef rpr_material_node_type fr_material_node_type;
typedef rpr_material_node_input fr_material_node_input;
typedef rpr_material_node_input_type fr_material_node_input_type;
typedef rpr_material_node_info fr_material_node_info;
typedef rpr_material_node_input_info fr_material_node_input_info;
typedef rpr_aov fr_aov;
typedef rpr_post_effect_type fr_post_effect_type;
typedef rpr_post_effect_info fr_post_effect_info;
typedef rpr_composite_info fr_composite_info;
typedef rpr_composite_type fr_composite_type;
typedef rpr_color_space fr_color_space;
typedef rpr_environment_override fr_environment_override;
typedef rpr_subdiv_boundary_interfop_type fr_subdiv_boundary_interfop_type;
typedef rpr_material_node_lookup_value fr_material_node_lookup_value;
typedef rpr_material_node_uvtype_value fr_material_node_uvtype_value;
typedef rpr_material_node_transform_op fr_material_node_transform_op;
typedef rpr_image_wrap_type fr_image_wrap_type;
typedef rpr_image_filter_type fr_image_filter_type;
typedef rpr_material_node_arithmetic_operation fr_material_node_arithmetic_operation;
typedef rpr_hetero_volume_parameter fr_hetero_volume_parameter;
typedef rpr_grid_parameter fr_grid_parameter;
typedef rpr_curve_parameter fr_curve_parameter;
typedef rpr_grid_indices_topology fr_grid_indices_topology;
typedef rpr_ubermaterial_ior_mode fr_ubermaterial_ior_mode;
typedef rpr_ubermaterial_emission_mode fr_ubermaterial_emission_mode;
typedef rpr_image_desc fr_image_desc;
typedef rpr_buffer_desc fr_buffer_desc;
typedef rpr_framebuffer_desc fr_framebuffer_desc;
typedef rpr_render_statistics fr_render_statistics;
typedef rpr_image_format fr_image_format;
typedef rpr_ies_image_desc fr_ies_image_desc;
typedef rpr_framebuffer_format fr_framebuffer_format;
extern RPR_API_ENTRY fr_int frRegisterPlugin(fr_char const * path);
extern RPR_API_ENTRY fr_int frCreateContext(fr_int api_version, fr_int * pluginIDs, size_t pluginCount, fr_creation_flags creation_flags, fr_context_properties const * props, fr_char const * cache_path, fr_context * out_context);
extern RPR_API_ENTRY fr_int frContextSetActivePlugin(fr_context context, fr_int pluginID);
extern RPR_API_ENTRY fr_int frContextGetInfo(fr_context context, fr_context_info context_info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frContextGetParameterInfo(fr_context context, int param_idx, fr_parameter_info parameter_info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frContextGetAOV(fr_context context, fr_aov aov, fr_framebuffer * out_fb);
extern RPR_API_ENTRY fr_int frContextSetAOV(fr_context context, fr_aov aov, fr_framebuffer frame_buffer);
extern RPR_API_ENTRY fr_int frContextSetAOVindexLookup(fr_context context, fr_int key, fr_float colorR, fr_float colorG, fr_float colorB, fr_float colorA);
extern RPR_API_ENTRY fr_int frContextSetScene(fr_context context, fr_scene scene);
extern RPR_API_ENTRY fr_int frContextGetScene(fr_context arg0, fr_scene * out_scene);
extern RPR_API_ENTRY fr_int frContextSetParameterByKey1u(fr_context context, fr_context_info in_input, fr_uint x);
extern RPR_API_ENTRY fr_int frContextSetParameterByKey1f(fr_context context, fr_context_info in_input, fr_float x);
extern RPR_API_ENTRY fr_int frContextSetParameterByKey3f(fr_context context, fr_context_info in_input, fr_float x, fr_float y, fr_float z);
extern RPR_API_ENTRY fr_int frContextSetParameterByKey4f(fr_context context, fr_context_info in_input, fr_float x, fr_float y, fr_float z, fr_float w);
extern RPR_API_ENTRY fr_int frContextSetParameterByKeyString(fr_context context, fr_context_info in_input, fr_char const * value);
extern RPR_API_ENTRY fr_int frContextRender(fr_context context);
extern RPR_API_ENTRY fr_int frContextAbortRender(fr_context context);
extern RPR_API_ENTRY fr_int frContextRenderTile(fr_context context, fr_uint xmin, fr_uint xmax, fr_uint ymin, fr_uint ymax);
extern RPR_API_ENTRY fr_int frContextClearMemory(fr_context context);
extern RPR_API_ENTRY fr_int frContextCreateImage(fr_context context, fr_image_format const format, fr_image_desc const * image_desc, void const * data, fr_image * out_image);
extern RPR_API_ENTRY fr_int frContextCreateBuffer(fr_context context, fr_buffer_desc const * buffer_desc, void const * data, fr_buffer * out_buffer);
extern RPR_API_ENTRY fr_int frContextCreateImageFromFile(fr_context context, fr_char const * path, fr_image * out_image);
extern RPR_API_ENTRY fr_int frContextCreateImageFromFileMemory(fr_context context, fr_char const * extension, void const * data, size_t dataSizeByte, fr_image * out_image);
extern RPR_API_ENTRY fr_int frContextCreateScene(fr_context context, fr_scene * out_scene);
extern RPR_API_ENTRY fr_int frContextCreateInstance(fr_context context, fr_shape shape, fr_shape * out_instance);
extern RPR_API_ENTRY fr_int frContextCreateMesh(fr_context context, fr_float const * vertices, size_t num_vertices, fr_int vertex_stride, fr_float const * normals, size_t num_normals, fr_int normal_stride, fr_float const * texcoords, size_t num_texcoords, fr_int texcoord_stride, fr_int const * vertex_indices, fr_int vidx_stride, fr_int const * normal_indices, fr_int nidx_stride, fr_int const * texcoord_indices, fr_int tidx_stride, fr_int const * num_face_vertices, size_t num_faces, fr_shape * out_mesh);
extern RPR_API_ENTRY fr_int frContextCreateMeshEx(fr_context context, fr_float const * vertices, size_t num_vertices, fr_int vertex_stride, fr_float const * normals, size_t num_normals, fr_int normal_stride, fr_int const * perVertexFlag, size_t num_perVertexFlags, fr_int perVertexFlag_stride, fr_int numberOfTexCoordLayers, fr_float const ** texcoords, size_t const * num_texcoords, fr_int const * texcoord_stride, fr_int const * vertex_indices, fr_int vidx_stride, fr_int const * normal_indices, fr_int nidx_stride, fr_int const ** texcoord_indices, fr_int const * tidx_stride, fr_int const * num_face_vertices, size_t num_faces, fr_shape * out_mesh);
extern RPR_API_ENTRY fr_int frContextCreateMeshEx2(fr_context context, fr_float const * vertices, size_t num_vertices, fr_int vertex_stride, fr_float const * normals, size_t num_normals, fr_int normal_stride, fr_int const * perVertexFlag, size_t num_perVertexFlags, fr_int perVertexFlag_stride, fr_int numberOfTexCoordLayers, fr_float const ** texcoords, size_t const * num_texcoords, fr_int const * texcoord_stride, fr_int const * vertex_indices, fr_int vidx_stride, fr_int const * normal_indices, fr_int nidx_stride, fr_int const ** texcoord_indices, fr_int const * tidx_stride, fr_int const * num_face_vertices, size_t num_faces, fr_mesh_info const * mesh_properties, fr_shape * out_mesh);
extern RPR_API_ENTRY fr_int frContextCreateCamera(fr_context context, fr_camera * out_camera);
extern RPR_API_ENTRY fr_int frContextCreateFrameBuffer(fr_context context, fr_framebuffer_format const format, fr_framebuffer_desc const * fb_desc, fr_framebuffer * out_fb);
extern RPR_API_ENTRY fr_int frContextGetFunctionPtr(fr_context context, fr_char const * function_name, void ** out_function_ptr);
extern RPR_API_ENTRY fr_int frCameraGetInfo(fr_camera camera, fr_camera_info camera_info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frCameraSetFocalLength(fr_camera camera, fr_float flength);
extern RPR_API_ENTRY fr_int frCameraSetLinearMotion(fr_camera camera, fr_float x, fr_float y, fr_float z);
extern RPR_API_ENTRY fr_int frCameraSetAngularMotion(fr_camera camera, fr_float x, fr_float y, fr_float z, fr_float w);
extern RPR_API_ENTRY fr_int frCameraSetFocusDistance(fr_camera camera, fr_float fdist);
extern RPR_API_ENTRY fr_int frCameraSetTransform(fr_camera camera, fr_bool transpose, fr_float * transform);
extern RPR_API_ENTRY fr_int frCameraSetSensorSize(fr_camera camera, fr_float width, fr_float height);
extern RPR_API_ENTRY fr_int frCameraLookAt(fr_camera camera, fr_float posx, fr_float posy, fr_float posz, fr_float atx, fr_float aty, fr_float atz, fr_float upx, fr_float upy, fr_float upz);
extern RPR_API_ENTRY fr_int frCameraSetFStop(fr_camera camera, fr_float fstop);
extern RPR_API_ENTRY fr_int frCameraSetApertureBlades(fr_camera camera, fr_uint num_blades);
extern RPR_API_ENTRY fr_int frCameraSetExposure(fr_camera camera, fr_float exposure);
extern RPR_API_ENTRY fr_int frCameraSetMode(fr_camera camera, fr_camera_mode mode);
extern RPR_API_ENTRY fr_int frCameraSetOrthoWidth(fr_camera camera, fr_float width);
extern RPR_API_ENTRY fr_int frCameraSetFocalTilt(fr_camera camera, fr_float tilt);
extern RPR_API_ENTRY fr_int frCameraSetIPD(fr_camera camera, fr_float ipd);
extern RPR_API_ENTRY fr_int frCameraSetLensShift(fr_camera camera, fr_float shiftx, fr_float shifty);
extern RPR_API_ENTRY fr_int frCameraSetTiltCorrection(fr_camera camera, fr_float tiltX, fr_float tiltY);
extern RPR_API_ENTRY fr_int frCameraSetOrthoHeight(fr_camera camera, fr_float height);
extern RPR_API_ENTRY fr_int frCameraSetNearPlane(fr_camera camera, fr_float near);
extern RPR_API_ENTRY fr_int frCameraSetFarPlane(fr_camera camera, fr_float far);
extern RPR_API_ENTRY fr_int frImageGetInfo(fr_image image, fr_image_info image_info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frImageSetWrap(fr_image image, fr_image_wrap_type type);
extern RPR_API_ENTRY fr_int frImageSetFilter(fr_image image, fr_image_filter_type type);
extern RPR_API_ENTRY fr_int frImageSetGamma(fr_image image, fr_float type);
extern RPR_API_ENTRY fr_int frImageSetMipmapEnabled(fr_image image, fr_bool enabled);
extern RPR_API_ENTRY fr_int frShapeSetTransform(fr_shape shape, fr_bool transpose, fr_float const * transform);
extern RPR_API_ENTRY fr_int frShapeSetVertexValue(fr_shape in_shape, fr_int setIndex, fr_int const * indices, fr_float const * values, fr_int indicesCount);
extern RPR_API_ENTRY fr_int frShapeSetSubdivisionFactor(fr_shape shape, fr_uint factor);
extern RPR_API_ENTRY fr_int frShapeSetSubdivisionCreaseWeight(fr_shape shape, fr_float factor);
extern RPR_API_ENTRY fr_int frShapeSetSubdivisionBoundaryInterop(fr_shape shape, fr_subdiv_boundary_interfop_type type);
extern RPR_API_ENTRY fr_int frShapeAutoAdaptSubdivisionFactor(fr_shape shape, fr_framebuffer framebuffer, fr_camera camera, fr_int factor);
extern RPR_API_ENTRY fr_int frShapeSetDisplacementScale(fr_shape shape, fr_float minscale, fr_float maxscale);
extern RPR_API_ENTRY fr_int frShapeSetObjectGroupID(fr_shape shape, fr_uint objectGroupID);
extern RPR_API_ENTRY fr_int frShapeSetLightGroupID(fr_shape shape, fr_uint lightGroupID);
extern RPR_API_ENTRY fr_int frShapeSetLayerMask(fr_shape shape, fr_uint layerMask);
extern RPR_API_ENTRY fr_int frShapeSetDisplacementMaterial(fr_shape shape, fr_material_node materialNode);
extern RPR_API_ENTRY fr_int frShapeSetMaterial(fr_shape shape, fr_material_node node);
extern RPR_API_ENTRY fr_int frShapeSetMaterialFaces(fr_shape shape, fr_material_node node, fr_int const * face_indices, size_t num_faces);
extern RPR_API_ENTRY fr_int frShapeSetVolumeMaterial(fr_shape shape, fr_material_node node);
extern RPR_API_ENTRY fr_int frShapeSetLinearMotion(fr_shape shape, fr_float x, fr_float y, fr_float z);
extern RPR_API_ENTRY fr_int frShapeSetAngularMotion(fr_shape shape, fr_float x, fr_float y, fr_float z, fr_float w);
extern RPR_API_ENTRY fr_int frShapeSetScaleMotion(fr_shape shape, fr_float x, fr_float y, fr_float z);
extern RPR_API_ENTRY fr_int frShapeSetVisibilityFlag(fr_shape shape, fr_shape_info visibilityFlag, fr_bool visible);
extern RPR_API_ENTRY fr_int frShapeSetVisibility(fr_shape shape, fr_bool visible);
extern RPR_API_ENTRY fr_int frShapeSetVisibilityInSpecular(fr_shape shape, fr_bool visible);
extern RPR_API_ENTRY fr_int frShapeSetShadowCatcher(fr_shape shape, fr_bool shadowCatcher);
extern RPR_API_ENTRY fr_int frShapeSetReflectionCatcher(fr_shape shape, fr_bool reflectionCatcher);
extern RPR_API_ENTRY fr_int frShapeMarkStatic(fr_shape in_shape, fr_bool in_is_static);
extern RPR_API_ENTRY fr_int frLightSetTransform(fr_light light, fr_bool transpose, fr_float const * transform);
extern RPR_API_ENTRY fr_int frLightSetGroupId(fr_light light, fr_uint groupId);
extern RPR_API_ENTRY fr_int frShapeGetInfo(fr_shape arg0, fr_shape_info arg1, size_t arg2, void * arg3, size_t * arg4);
extern RPR_API_ENTRY fr_int frMeshGetInfo(fr_shape mesh, fr_mesh_info mesh_info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frCurveGetInfo(fr_curve curve, fr_curve_parameter curve_info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frHeteroVolumeGetInfo(fr_hetero_volume heteroVol, fr_hetero_volume_parameter heteroVol_info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frGridGetInfo(fr_grid grid, fr_grid_parameter grid_info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frBufferGetInfo(fr_buffer buffer, fr_buffer_info buffer_info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frInstanceGetBaseShape(fr_shape shape, fr_shape * out_shape);
extern RPR_API_ENTRY fr_int frContextCreatePointLight(fr_context context, fr_light * out_light);
extern RPR_API_ENTRY fr_int frPointLightSetRadiantPower3f(fr_light light, fr_float r, fr_float g, fr_float b);
extern RPR_API_ENTRY fr_int frContextCreateSpotLight(fr_context context, fr_light * light);
extern RPR_API_ENTRY fr_int frSpotLightSetRadiantPower3f(fr_light light, fr_float r, fr_float g, fr_float b);
extern RPR_API_ENTRY fr_int frSpotLightSetConeShape(fr_light light, fr_float iangle, fr_float oangle);
extern RPR_API_ENTRY fr_int frContextCreateDirectionalLight(fr_context context, fr_light * out_light);
extern RPR_API_ENTRY fr_int frDirectionalLightSetRadiantPower3f(fr_light light, fr_float r, fr_float g, fr_float b);
extern RPR_API_ENTRY fr_int frDirectionalLightSetShadowSoftness(fr_light light, fr_float coeff);
extern RPR_API_ENTRY fr_int frContextCreateEnvironmentLight(fr_context context, fr_light * out_light);
extern RPR_API_ENTRY fr_int frEnvironmentLightSetImage(fr_light env_light, fr_image image);
extern RPR_API_ENTRY fr_int frEnvironmentLightSetIntensityScale(fr_light env_light, fr_float intensity_scale);
extern RPR_API_ENTRY fr_int frEnvironmentLightAttachPortal(fr_scene scene, fr_light env_light, fr_shape portal);
extern RPR_API_ENTRY fr_int frEnvironmentLightDetachPortal(fr_scene scene, fr_light env_light, fr_shape portal);
extern RPR_API_ENTRY fr_int frEnvironmentLightSetEnvironmentOverride(fr_light in_ibl, fr_environment_override overrride, fr_image in_image);
extern RPR_API_ENTRY fr_int frEnvironmentLightGetEnvironmentOverride(fr_light in_ibl, fr_environment_override overrride, fr_image* out_image);
extern RPR_API_ENTRY fr_int frContextCreateSkyLight(fr_context context, fr_light * out_light);
extern RPR_API_ENTRY fr_int frSkyLightSetTurbidity(fr_light skylight, fr_float turbidity);
extern RPR_API_ENTRY fr_int frSkyLightSetAlbedo(fr_light skylight, fr_float albedo);
extern RPR_API_ENTRY fr_int frSkyLightSetScale(fr_light skylight, fr_float scale);
extern RPR_API_ENTRY fr_int frSkyLightSetDirection(fr_light skylight, fr_float x, fr_float y, fr_float z);
extern RPR_API_ENTRY fr_int frSkyLightAttachPortal(fr_scene scene, fr_light skylight, fr_shape portal);
extern RPR_API_ENTRY fr_int frSkyLightDetachPortal(fr_scene scene, fr_light skylight, fr_shape portal);
extern RPR_API_ENTRY fr_int frContextCreateIESLight(fr_context context, fr_light * light);
extern RPR_API_ENTRY fr_int frIESLightSetRadiantPower3f(fr_light light, fr_float r, fr_float g, fr_float b);
extern RPR_API_ENTRY fr_int frIESLightSetImageFromFile(fr_light env_light, fr_char const * imagePath, fr_int nx, fr_int ny);
extern RPR_API_ENTRY fr_int frIESLightSetImageFromIESdata(fr_light env_light, fr_char const * iesData, fr_int nx, fr_int ny);
extern RPR_API_ENTRY fr_int frLightGetInfo(fr_light light, fr_light_info info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frSceneClear(fr_scene scene);
extern RPR_API_ENTRY fr_int frSceneAttachShape(fr_scene scene, fr_shape shape);
extern RPR_API_ENTRY fr_int frSceneDetachShape(fr_scene scene, fr_shape shape);
extern RPR_API_ENTRY fr_int frSceneAttachHeteroVolume(fr_scene scene, fr_hetero_volume heteroVolume);
extern RPR_API_ENTRY fr_int frSceneDetachHeteroVolume(fr_scene scene, fr_hetero_volume heteroVolume);
extern RPR_API_ENTRY fr_int frSceneAttachCurve(fr_scene scene, fr_curve curve);
extern RPR_API_ENTRY fr_int frSceneDetachCurve(fr_scene scene, fr_curve curve);
extern RPR_API_ENTRY fr_int frCurveSetMaterial(fr_curve curve, fr_material_node material);
extern RPR_API_ENTRY fr_int frCurveSetTransform(fr_curve curve, fr_bool transpose, fr_float const * transform);
extern RPR_API_ENTRY fr_int frContextCreateCurve(fr_context context, fr_curve * out_curve, size_t num_controlPoints, fr_float const * controlPointsData, fr_int controlPointsStride, size_t num_indices, fr_uint curveCount, fr_uint const * indicesData, fr_float const * radius, fr_float const * textureUV, fr_int const * segmentPerCurve, fr_uint creationFlag_tapered);
extern RPR_API_ENTRY fr_int frSceneAttachLight(fr_scene scene, fr_light light);
extern RPR_API_ENTRY fr_int frSceneDetachLight(fr_scene scene, fr_light light);
extern RPR_API_ENTRY fr_int frSceneSetEnvironmentLight(fr_scene in_scene, fr_light in_light);
extern RPR_API_ENTRY fr_int frSceneGetEnvironmentLight(fr_scene in_scene, fr_light* out_light);
extern RPR_API_ENTRY fr_int frSceneGetInfo(fr_scene scene, fr_scene_info info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frSceneSetBackgroundImage(fr_scene scene, fr_image image);
extern RPR_API_ENTRY fr_int frSceneGetBackgroundImage(fr_scene scene, fr_image * out_image);
extern RPR_API_ENTRY fr_int frSceneSetCameraRight(fr_scene scene, fr_camera camera);
extern RPR_API_ENTRY fr_int frSceneGetCameraRight(fr_scene scene, fr_camera * out_camera);
extern RPR_API_ENTRY fr_int frSceneSetCamera(fr_scene scene, fr_camera camera);
extern RPR_API_ENTRY fr_int frSceneGetCamera(fr_scene scene, fr_camera * out_camera);
extern RPR_API_ENTRY fr_int frFrameBufferGetInfo(fr_framebuffer framebuffer, fr_framebuffer_info info, size_t size, void * data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frFrameBufferClear(fr_framebuffer frame_buffer);
extern RPR_API_ENTRY fr_int frFrameBufferFillWithColor(fr_framebuffer frame_buffer, fr_float r, fr_float g, fr_float b, fr_float a);
extern RPR_API_ENTRY fr_int frFrameBufferSaveToFile(fr_framebuffer frame_buffer, fr_char const * file_path);
extern RPR_API_ENTRY fr_int frContextResolveFrameBuffer(fr_context context, fr_framebuffer src_frame_buffer, fr_framebuffer dst_frame_buffer, fr_bool noDisplayGamma);
extern RPR_API_ENTRY fr_int frMaterialSystemGetInfo(fr_material_system in_material_system, fr_material_system_info type, size_t in_size, void * in_data, size_t * out_size);
extern RPR_API_ENTRY fr_int frContextCreateMaterialSystem(fr_context in_context, fr_material_system_type type, fr_material_system * out_matsys);
extern RPR_API_ENTRY fr_int frMaterialSystemGetSize(fr_context in_context, fr_uint * out_size);
extern RPR_API_ENTRY fr_int frMaterialSystemCreateNode(fr_material_system in_matsys, fr_material_node_type in_type, fr_material_node * out_node);
extern RPR_API_ENTRY fr_int frMaterialNodeSetInputNByKey(fr_material_node in_node, fr_material_node_input in_input, fr_material_node in_input_node);
extern RPR_API_ENTRY fr_int frMaterialNodeSetInputFByKey(fr_material_node in_node, fr_material_node_input in_input, fr_float in_value_x, fr_float in_value_y, fr_float in_value_z, fr_float in_value_w);
extern RPR_API_ENTRY fr_int frMaterialNodeSetInputUByKey(fr_material_node in_node, fr_material_node_input in_input, fr_uint in_value);
extern RPR_API_ENTRY fr_int frMaterialNodeSetInputImageDataByKey(fr_material_node in_node, fr_material_node_input in_input, fr_image image);
extern RPR_API_ENTRY fr_int frMaterialNodeSetInputBufferDataByKey(fr_material_node in_node, fr_material_node_input in_input, fr_buffer buffer);
extern RPR_API_ENTRY fr_int frMaterialNodeGetInfo(fr_material_node in_node, fr_material_node_info in_info, size_t in_size, void * in_data, size_t * out_size);
extern RPR_API_ENTRY fr_int frMaterialNodeGetInputInfo(fr_material_node in_node, fr_int in_input_idx, fr_material_node_input_info in_info, size_t in_size, void * in_data, size_t * out_size);
extern RPR_API_ENTRY fr_int frContextCreateComposite(fr_context context, fr_composite_type in_type, fr_composite * out_composite);
extern RPR_API_ENTRY fr_int frContextCreateLUTFromFile(fr_context context, const fr_char * fileLutPath, fr_lut * out_lut);
extern RPR_API_ENTRY fr_int frContextCreateLUTFromData(fr_context context, const fr_char * lutData, fr_lut * out_lut);
extern RPR_API_ENTRY fr_int frCompositeSetInputFb(fr_composite composite, const fr_char * inputName, fr_framebuffer input);
extern RPR_API_ENTRY fr_int frCompositeSetInputC(fr_composite composite, const fr_char * inputName, fr_composite input);
extern RPR_API_ENTRY fr_int frCompositeSetInputLUT(fr_composite composite, const fr_char * inputName, fr_lut input);
extern RPR_API_ENTRY fr_int frCompositeSetInput4f(fr_composite composite, const fr_char * inputName, float x, float y, float z, float w);
extern RPR_API_ENTRY fr_int frCompositeSetInput1u(fr_composite composite, const fr_char * inputName, fr_uint value);
extern RPR_API_ENTRY fr_int frCompositeSetInputOp(fr_composite composite, const fr_char * inputName, fr_material_node_arithmetic_operation op);
extern RPR_API_ENTRY fr_int frCompositeCompute(fr_composite composite, fr_framebuffer fb);
extern RPR_API_ENTRY fr_int frCompositeGetInfo(fr_composite composite, fr_composite_info composite_info, size_t size, void *  data, size_t * size_ret);
extern RPR_API_ENTRY fr_int frObjectDelete(void * obj);
extern RPR_API_ENTRY fr_int frObjectSetName(void * node, fr_char const * name);
extern RPR_API_ENTRY fr_int frContextCreatePostEffect(fr_context context, fr_post_effect_type type, fr_post_effect * out_effect);
extern RPR_API_ENTRY fr_int frContextAttachPostEffect(fr_context context, fr_post_effect effect);
extern RPR_API_ENTRY fr_int frContextDetachPostEffect(fr_context context, fr_post_effect effect);
extern RPR_API_ENTRY fr_int frPostEffectSetParameter1u(fr_post_effect effect, fr_char const * name, fr_uint x);
extern RPR_API_ENTRY fr_int frPostEffectSetParameter1f(fr_post_effect effect, fr_char const * name, fr_float x);
extern RPR_API_ENTRY fr_int frPostEffectSetParameter3f(fr_post_effect effect, fr_char const * name, fr_float x, fr_float y, fr_float z);
extern RPR_API_ENTRY fr_int frPostEffectSetParameter4f(fr_post_effect effect, fr_char const * name, fr_float x, fr_float y, fr_float z, fr_float w);
extern RPR_API_ENTRY fr_int frContextGetAttachedPostEffectCount(fr_context context, fr_uint *  nb);
extern RPR_API_ENTRY fr_int frContextGetAttachedPostEffect(fr_context context, fr_uint i, fr_post_effect * out_effect);
extern RPR_API_ENTRY fr_int frPostEffectGetInfo(fr_post_effect effect, fr_post_effect_info info, size_t size,  void *  data, size_t *  size_ret);
extern RPR_API_ENTRY fr_int frContextCreateGrid(fr_context context, fr_grid * out_grid, size_t gridSizeX, size_t gridSizeY, size_t gridSizeZ, void const * indicesList, size_t numberOfIndices, fr_grid_indices_topology indicesListTopology, void const * gridData, size_t gridDataSizeByte, fr_uint gridDataTopology___unused);
extern RPR_API_ENTRY fr_int frContextCreateHeteroVolume(fr_context context, fr_hetero_volume * out_heteroVolume);
extern RPR_API_ENTRY fr_int frShapeSetHeteroVolume(fr_shape shape, fr_hetero_volume heteroVolume);
extern RPR_API_ENTRY fr_int frHeteroVolumeSetTransform(fr_hetero_volume heteroVolume, fr_bool transpose, fr_float const * transform);
extern RPR_API_ENTRY fr_int frHeteroVolumeSetEmissionGrid(fr_hetero_volume heteroVolume, fr_grid grid);
extern RPR_API_ENTRY fr_int frHeteroVolumeSetDensityGrid(fr_hetero_volume heteroVolume, fr_grid grid);
extern RPR_API_ENTRY fr_int frHeteroVolumeSetAlbedoGrid(fr_hetero_volume heteroVolume, fr_grid grid);
extern RPR_API_ENTRY fr_int frHeteroVolumeSetEmissionLookup(fr_hetero_volume heteroVolume, fr_float const * ptr, fr_uint n);
extern RPR_API_ENTRY fr_int frHeteroVolumeSetDensityLookup(fr_hetero_volume heteroVolume, fr_float const * ptr, fr_uint n);
extern RPR_API_ENTRY fr_int frHeteroVolumeSetAlbedoLookup(fr_hetero_volume heteroVolume, fr_float const * ptr, fr_uint n);
extern RPR_API_ENTRY fr_int frHeteroVolumeSetAlbedoScale(fr_hetero_volume heteroVolume, fr_float scale);
extern RPR_API_ENTRY fr_int frHeteroVolumeSetEmissionScale(fr_hetero_volume heteroVolume, fr_float scale);
extern RPR_API_ENTRY fr_int frHeteroVolumeSetDensityScale(fr_hetero_volume heteroVolume, fr_float scale);

#ifdef __cplusplus
}
#endif

#endif // __RADEONPRORENDER_DEPRECATED_H
